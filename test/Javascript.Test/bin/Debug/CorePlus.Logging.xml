<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CorePlus.Logging</name>
    </assembly>
    <members>
        <member name="T:CorePlus.Logging.HtmlLoggingStringConverter">
            <summary>
            用于转换 <see cref="T:CorePlus.Logging.LogEntry"/> 实例到 HTML 的工具。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.LoggingStringConverter">
            <summary>
            用于转换 <see cref="T:CorePlus.Logging.LogEntry"/> 实例到字符串的工具。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LoggingStringConverter.#ctor">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LoggingStringConverter.ToString(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现把一个 <see cref="T:CorePlus.Logging.LogEntry"/> 实例转为字符串。
            </summary>
            <param name="entry">要转换的 <see cref="T:CorePlus.Logging.LogEntry"/> 实例。</param>
            <returns>一个字符串，包含 LogEntry 的信息。</returns>
        </member>
        <member name="M:CorePlus.Logging.HtmlLoggingStringConverter.ToString(System.Data.DataTable,System.Int32,System.Int32,System.Boolean)">
            <summary>
            返回表示值的字符串。
            </summary>
            <param name="dt">值。</param>
            <param name="maxLevel">转换的等级。</param>
            <param name="size">列的宽度。</param>
            <param name="header">如果 true ，则添加行首。</param>
            <returns>字符串。表示当前的值。</returns>
        </member>
        <member name="T:CorePlus.Logging.WindowLogListener">
            <summary>
            将日志输出到临时的控制台窗口。
            </summary>
            <remarks>
            <see cref="T:CorePlus.Logging.WindowLogListener"/> 并不支持多线程。如果创建窗口的线程不是主线程，将出现假死。为了避免此情况的发生，不应该在多线程的环境使用 <see cref="T:CorePlus.Logging.WindowLogListener"/> 。
            </remarks>
        </member>
        <member name="T:CorePlus.Logging.LogListener">
             <summary>
             为日志输出的侦听器提供抽象基类。
             </summary>
             <remarks>
             <see cref="T:CorePlus.Logging.LogListener"/> 将各个应用输出转为统一的 <see cref="T:CorePlus.Logging.LogEntry"/> ，然后交给子类输出。
             
             <list type="number">
                 <listheader> <see cref="T:CorePlus.Logging.LogListener"/> 接受一个日志请求后执行下列步骤: </listheader>
                 <item>接受用户提交的数据。</item>
                 <item>如果用户提交的数据是 <see cref="T:System.Object"/>， 使用 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 转为字符串。</item>
                 <item>生成一个 <see cref="T:CorePlus.Logging.LogEntry"/> 的实例，封装一个日志的所有信息。</item>
                 <item>使用 <see cref="P:LogEntry.OnLog(LogEntry)"/> 保存日志，这个函数由子类完成。</item>
             </list>
            
             通过 <see cref="T:CorePlus.Logging.LogListener"/> 的 <see cref="P:LogListener.LoggingStringConverter"/> 的成员可以更改 <see cref="T:System.Object"/> 类型转为字符串的行为。
             
             </remarks>
             <seealso cref="T:CorePlus.Logging.Logger"/>
        </member>
        <member name="F:CorePlus.Logging.LogListener._flag">
            <summary>
            存储启用情况的字段。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Indent">
            <summary>
            增加一个缩进。
            </summary>
            <remarks>
            此操作相当于 IndentLevel++ 。
            </remarks>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Unindent">
            <summary>
            减小一个缩进。
            </summary>
            <remarks>
            此操作相当于 IndentLevel-- 。
            </remarks>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.LogListener.#ctor">
            <summary>
            使用当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和默认的 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.LogListener"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.#ctor(CorePlus.Logging.LoggingStringConverter)">
            <summary>
            使用当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和指定的 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.LogListener"/> 的新实例。
            </summary>
            <param name="converter">一个 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 实例，用于将变量转为字符串。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.#ctor(System.IFormatProvider,CorePlus.Logging.LoggingStringConverter)">
            <summary>
            使用指定的 <see cref="T:System.IFormatProvider"/> 和 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.LogListener"/> 的新实例。
            </summary>
            <param name="formatProvider">一个实现 <see cref="T:System.IFormatProvider"/> 接口的对象实例，用于格式化输出字符串。</param>
            <param name="converter">一个 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 实例，用于将变量转为字符串。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Finalize">
            <summary>
            释放 <see cref="T:CorePlus.Logging.LogListener"/> 所占用的资源。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Close">
            <summary>
            刷新输出缓冲区，并关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Clear">
            <summary>
            清除全部日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Clear(System.DateTime)">
            <summary>
            清除指定时间之前的全部日志。
            </summary>
            <param name="dt">指定的时间。在此时间之前(包括此时间)的日志都被清除。</param>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除指定的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Clear(System.Int32)">
            <summary>
            清除日志，但不删除最新的 <paramref name="maxCount"/> 个记录。
            </summary>
            <param name="maxCount">指定的最大记录数，如果剩余的日志数超过 maxCount，则清除更早的日志。</param>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除指定的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Start">
            <summary>
            记录一个空的开始消息。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Start(System.String)">
            <summary>
            记录一个开始消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Start(System.String,System.String[])">
            <summary>
            记录一个开始消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.End">
            <summary>
            记录一个空的结束消息。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.End(System.String)">
            <summary>
            记录一个结束消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.End(System.String,System.String[])">
            <summary>
            记录一个结束消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Warning(System.String)">
            <summary>
            记录一个警告消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Warning(System.String,System.Object[])">
            <summary>
            记录一个警告消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Warning(System.Object)">
            <summary>
            记录一个警告消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.WarningIf(System.Boolean,System.String,System.Object[])">
            <summary>
            如果 <paramref name="condition"/> 等于 true，记录一个警告消息。
            </summary>
            <param name="condition">记录的条件, 只有在 <paramref name="condition"/> 为 true 时才进行记录。</param>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Error(System.String)">
            <summary>
            记录一个错误。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Error(System.String,System.Object[])">
            <summary>
            记录一个错误。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Error(System.Object)">
            <summary>
            记录一个错误。
            </summary>
            <param name="value">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Failure(System.String)">
            <summary>
            记录一个失败记录。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Failure(System.String,System.Object[])">
            <summary>
            记录一个失败记录。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Failure(System.Object)">
            <summary>
            记录一个失败记录。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Info(System.String)">
            <summary>
            记录一个信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Info(System.String,System.Object[])">
            <summary>
            记录一个信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Info(System.Object)">
            <summary>
            记录一个信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Debug(System.String)">
            <summary>
            记录调试的一个信息。当且仅当存在 DEBUG 宏时才有效。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Debug(System.Object[])">
            <summary>
            记录调试的一个信息。当且仅当存在 DEBUG 宏时才有效。
            </summary>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Debug(System.Object)">
            <summary>
            记录调试的一个信息。当且仅当存在 DEBUG 宏时才有效。
            </summary>
            <param name="value">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Trace(System.String)">
            <summary>
            记录调试的一个信息。当且仅当存在 TRACE 宏时才有效。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Trace(System.Object[])">
            <summary>
            记录调试的一个信息。当且仅当存在 TRACE 宏时才有效。
            </summary>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Trace(System.Object)">
            <summary>
            记录调试的一个信息。当且仅当存在 TRACE 宏时才有效。
            </summary>
            <param name="value">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Success">
            <summary>
            记录一个成功信息。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Success(System.String)">
            <summary>
            记录一个成功信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Success(System.String,System.Object[])">
            <summary>
            记录一个成功信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Write(System.String)">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Write(System.String,System.Object[])">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Write(System.Object)">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Write">
            <summary>
            记录一个空的消息。大部分时候，此操作将记录一个空行。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.WriteIf(System.Boolean,System.String,System.Object[])">
            <summary>
            如果 <paramref name="condition"/> 等于 true，则记录一个消息。
            </summary>
            <param name="condition">记录的条件, 只有在 <paramref name="condition"/> 为 true 时才进行记录。</param>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.OnLog(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现输出一个 <see cref="T:CorePlus.Logging.LogEntry"/> 对象的具体操作。
            </summary>
            <param name="entry">要输出的 <see cref="T:CorePlus.Logging.LogEntry"/> 对象。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.OnLog(System.String,CorePlus.Logging.LogLevel)">
            <summary>
            当被子类重写时，实现输出指定消息和等级的具体操作。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="level">当前消息的等级。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Log(System.String,CorePlus.Logging.LogLevel)">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="level">当前消息的等级。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Log(CorePlus.Logging.LogEntry)">
            <summary>
            记录一个消息。
            </summary>
            <param name="entry">一个 <see cref="T:CorePlus.Logging.LogEntry"/> 实例，包含需要记录的消息的全部信息。</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="entry"/> 为空。</exception>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Log(CorePlus.Logging.LogLevel,System.String,System.Object[])">
            <summary>
            记录一个消息。
            </summary>
            <param name="level">日志等级。</param>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 <see cref="T:System.Object"/> 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Log(System.Object,CorePlus.Logging.LogLevel)">
            <summary>
            记录一个消息。
            </summary>
            <param name="value">需要记录的消息内容。</param>
            <param name="level">当前消息的等级。</param>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogListener.Dispose(System.Boolean)">
            <summary>
            释放当前实例使用的资源，可选是否释放非托管资源。
            </summary>
            <param name="disposing">如果为 true，则同时释放占用的托管与非托管资源，否则只释放托管资源。</param>
        </member>
        <member name="P:CorePlus.Logging.LogListener.Enable">
            <summary>
            设置全部信息的输出状态。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsErrorEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出错误消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsFailureEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出失败消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsInfoEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出信息性的消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsWarningEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出警告消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsSuccessEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出成功消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsDefaultLogLevelEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出默认等级的消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsVerboseEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出调试和跟踪消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsStepEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出开始和结束消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.LowestLevel">
            <summary>
            设置当前日志工具允许的最低等级的日志。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IsThreadSafe">
            <summary>
            获取一个值，该值指示日志侦听器是否是线程安全的。
            </summary>
            <value>如果日志侦听器是线程安全的，则为 true；否则为 false。默认值为 false。</value>
        </member>
        <member name="P:CorePlus.Logging.LogListener.FormatProvider">
            <summary>
            获取或设置字符串格式化机制。
            </summary>
            <value>一个实现 <see cref="T:System.IFormatProvider"/> 接口的对象实例，默认为 <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> 。</value>
        </member>
        <member name="P:CorePlus.Logging.LogListener.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.LoggingStringConverter">
            <summary>
            获取或设置用于将变量转为字符串的 <see cref="P:CorePlus.Logging.LogListener.LoggingStringConverter"/> 实例。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IndentLevel">
            <summary>
            获取或设置输出的缩进级别。
            </summary>
            <value>缩进级别。默认值为零。</value>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="P:CorePlus.Logging.LogListener.IndentSize">
            <summary>
            获取或设置缩进的空格数。
            </summary>
            <value>缩进的空格数。默认值为四。</value>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="F:CorePlus.Logging.WindowLogListener._colors">
            <summary>
            等级的颜色列表。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.ResetColor">
            <summary>
            重置颜色效果为默认风格。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.SetColor(CorePlus.Logging.LogLevel,System.Drawing.Color)">
            <summary>
            设置用于输出指定等级的控制台字体颜色。
            </summary>
            <param name="level">要设置的日志等级。</param>
            <param name="color">要设置的控制台颜色。</param>
        </member>
        <member name="F:CorePlus.Logging.WindowLogListener._textBox">
            <summary>
            当前使用的文本域。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.#ctor">
            <summary>
            使用当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和默认的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="P:CorePlus.Logging.WinFormControlLogListener"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.#ctor(CorePlus.Logging.LoggingStringConverter)">
            <summary>
            使用当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和指定的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.ConsoleLogListener"/> 的新实例。
            </summary>
            <param name="converter">日志转换实例。</param>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.Close">
            <summary>
            刷新输出缓冲区，关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.Clear">
            <summary>
            清除全部日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.OnLog(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现输出一个 <see cref="T:CorePlus.Logging.LogEntry"/> 对象的具体操作。
            </summary>
            <param name="entry">要输出的 <see cref="T:CorePlus.Logging.LogEntry"/> 对象。</param>
        </member>
        <member name="M:CorePlus.Logging.WindowLogListener.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.WindowLogListener.IndentLevel">
            <summary>
            获取或设置缩进级别。
            </summary>
            <value>缩进级别。默认值为零。</value>
        </member>
        <member name="P:CorePlus.Logging.WindowLogListener.IndentSize">
            <summary>
            获取或设置缩进的空格数。
            </summary>
            <value>缩进的空格数。默认值为四。</value>
            <remarks>
            如果不缩进，这个值为 1 。
            </remarks>
        </member>
        <member name="P:CorePlus.Logging.WindowLogListener.IsColorEnabled">
            <summary>
            获取或设置是否为不同等级的日志变换颜色输出。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.WindowLogListener.Form">
            <summary>
            获取当前文本框所在的 <see cref="P:CorePlus.Logging.WindowLogListener.Form"/> 窗体。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.WindowLogListener.TextBox">
            <summary>
            获取或设置当前用于输出日志的 <see cref="T:System.Windows.Forms.RichTextBox"/>。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.TraceLogListener">
            <summary>
            将日志输出到系统的调试流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.TraceLogListener.#ctor(CorePlus.Logging.LoggingStringConverter)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.ConsoleLogListener"/> 的新实例。
            </summary>
            <param name="convert">日志转换实例。</param>
        </member>
        <member name="M:CorePlus.Logging.TraceLogListener.#ctor">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.ConsoleLogListener"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.TraceLogListener.Close">
            <summary>
            刷新输出缓冲区，并关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.TraceLogListener.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.TraceLogListener.Clear">
            <summary>
            清除全部日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.TraceLogListener.OnLog(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现输出一个 <see cref="T:CorePlus.Logging.LogEntry"/> 对象的具体操作。
            </summary>
            <param name="entry">要输出的 <see cref="T:CorePlus.Logging.LogEntry"/> 对象。</param>
        </member>
        <member name="P:CorePlus.Logging.TraceLogListener.IsThreadSafe">
            <summary>
            获取一个值，该值指示日志侦听器是否是线程安全的。
            </summary>
            <value>如果日志侦听器是线程安全的，则为 true；否则为 false。默认值为 false。</value>
        </member>
        <member name="P:CorePlus.Logging.TraceLogListener.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Logging.TraceLogListener.IndentSize">
            <summary>
            获取或设置缩进的空格数。
            </summary>
            <value>缩进的空格数。默认值为四。</value>
            <remarks>
            如果不缩进，这个值为 0 。
            </remarks>
        </member>
        <member name="P:CorePlus.Logging.TraceLogListener.IndentLevel">
            <summary>
            获取或设置缩进级别。
            </summary>
            <value>缩进级别。默认值为零。</value>
        </member>
        <member name="T:CorePlus.Logging.StreamLogListener">
            <summary>
            将日志输出到流。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.TextLogListener">
            <summary>
            为所有以文本方式存储日志的侦听器提供抽象基类。
            </summary>
            <remarks>
            <see cref="T:CorePlus.Logging.TextLogListener"/> 先将 <see cref="T:CorePlus.Logging.LogEntry"/> 转为字符串，并包含缩进的内容，然后调用子类的函数记录日志。
            <list type="number">
                <listheader> <see cref="T:CorePlus.Logging.TextLogListener"/> 接受一个日志请求后执行下列步骤: </listheader>
                <item>调用 <see cref="P:TextLogListener.ConvertLogEntryString(LogEntry entry)"/> 转为字符串。 这个函数默认调用 <see cref="P:TextLogListener.LoggingStringConverter.ToString()"/> 实现。</item>
                <item>调用 <see cref="P:TextLogListener.OnLog(string message)"/> 写日志，这个函数由子类完成。</item>
            </list>
            
            </remarks>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.#ctor">
            <summary>
            使用当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和默认的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.TextLogListener"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.#ctor(CorePlus.Logging.LoggingStringConverter)">
            <summary>
            使用当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和指定的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.TextLogListener"/> 的新实例。
            </summary>
            <param name="converter">一个 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 实例，用于将变量转为字符串。</param>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.#ctor(System.IFormatProvider,CorePlus.Logging.LoggingStringConverter)">
            <summary>
            使用指定的 <see cref="T:System.IFormatProvider"/> 和 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.TextLogListener"/> 的新实例。
            </summary>
            <param name="formatProvider">一个实现 <see cref="T:System.IFormatProvider"/> 接口的对象实例，用于格式化输出字符串。</param>
            <param name="converter">一个 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 实例，用于将变量转为字符串。</param>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.OnLog(System.String)">
            <summary>
            当被子类重写时，实现输出一个已转为字符串的日志到缓存。
            </summary>
            <param name="message">要输出的内容。</param>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.GetIndentedText(System.String)">
            <summary>
            获取指定文本根据当前缩进配置进行缩进后的字符串。
            </summary>
            <param name="text">要缩进的文本。</param>
            <returns>缩进后的文本。</returns>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.ConvertLogEntry(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现将日志转为字符串。
            </summary>
            <param name="entry">要转换的日志。</param>
            <returns>一个字符串，表示指定的日志信息。</returns>
        </member>
        <member name="M:CorePlus.Logging.TextLogListener.OnLog(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现输出一个 <see cref="T:CorePlus.Logging.LogEntry"/> 对象的具体操作。
            </summary>
            <param name="entry">要输出的 <see cref="T:CorePlus.Logging.LogEntry"/> 对象。</param>
        </member>
        <member name="P:CorePlus.Logging.TextLogListener.IndentLevel">
            <summary>
            获取或设置缩进级别。
            </summary>
            <value>缩进级别。默认值为零。</value>
        </member>
        <member name="P:CorePlus.Logging.TextLogListener.IndentSize">
            <summary>
            获取或设置缩进的空格数。
            </summary>
            <value>缩进的空格数。默认值为四。</value>
            <remarks>
            如果不缩进，这个值为 0 。
            </remarks>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.#ctor(System.IO.Stream)">
            <summary>
            使用指定的 <see cref="T:System.IO.Stream"/> 、当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和默认的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.StreamLogListener"/> 的新实例。
            </summary>
            <param name="writer">流写入工具。</param>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.#ctor(System.IO.StreamWriter)">
            <summary>
            使用指定的 <see cref="P:CorePlus.Logging.StreamLogListener.StreamWriter"/> 、当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和默认的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.StreamLogListener"/> 的新实例。
            </summary>
            <param name="writer">流写入工具。</param>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.#ctor(System.IO.StreamWriter,CorePlus.Logging.LoggingStringConverter)">
            <summary>
            使用指定的 <see cref="P:CorePlus.Logging.StreamLogListener.StreamWriter"/> 、当前坏境的 <see cref="T:System.Globalization.CultureInfo"/> 和指定的 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 配置初始化 <see cref="T:CorePlus.Logging.StreamLogListener"/> 的新实例。
            </summary>
            <param name="writer">流写入工具。</param>
            <param name="converter">一个 <see cref="T:CorePlus.Logging.LoggingStringConverter"/> 实例，用于将变量转为字符串。</param>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.OnLog(System.String)">
            <summary>
            当被子类重写时，实现输出一个已转为字符串的日志到缓存。
            </summary>
            <param name="message">要输出的内容。</param>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.Close">
            <summary>
            刷新输出缓冲区，并关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.StreamLogListener.Dispose(System.Boolean)">
            <summary>
            释放当前实例使用的资源，可选是否释放非托管资源。
            </summary>
            <param name="disposing">如果为 true，则同时释放占用的托管与非托管资源，否则只释放托管资源。</param>
        </member>
        <member name="P:CorePlus.Logging.StreamLogListener.BaseStream">
            <summary>
            获取同后备存储区连接的基础流。
            </summary>
            <value>此 <see cref="T:CorePlus.Logging.StreamLogListener"/> 正在写入的基础流。</value>
        </member>
        <member name="P:CorePlus.Logging.StreamLogListener.Encoding">
            <summary>
            获取将输出写入到其中的 System.Text.Encoding。
            </summary>
            <value>在当前实例的构造函数中指定的 System.Text.Encoding；或者如果未指定编码，则为 System.Text.UTF8Encoding。</value>
        </member>
        <member name="P:CorePlus.Logging.StreamLogListener.StreamWriter">
            <summary>
            获取或设置正在使用的 <see cref="P:CorePlus.Logging.StreamLogListener.StreamWriter"/> 实例。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.StreamLogListener.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Logging.MultiLogListener">
            <summary>
            允许同时将日志记录到一个或更多个日志侦听器。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.MultiLogListener._logListeners">
            <summary>
            所有监听器。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.Flush">
            <summary>
            保存缓存中的日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.#ctor(CorePlus.Logging.LogListener,CorePlus.Logging.LogListener)">
            <summary>
            使用指定的 <see cref="T:CorePlus.Logging.LogListener"/> 初始化 <see cref="T:CorePlus.Logging.MultiLogListener"/> 的新实例。
            </summary>
            <param name="loggerA"><see cref="T:CorePlus.Logging.LogListener"/> 实例A。</param>
            <param name="loggerB"><see cref="T:CorePlus.Logging.LogListener"/> 实例B。</param>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.#ctor(CorePlus.Logging.LogListener[])">
            <summary>
            使用指定的 <see cref="T:CorePlus.Logging.LogListener"/> 初始化 <see cref="T:CorePlus.Logging.MultiLogListener"/> 的新实例。
            </summary>
            <param name="logListeners">零个或多个 <see cref="T:CorePlus.Logging.LogListener"/> 实例。</param>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.#ctor(System.Collections.Generic.IList{CorePlus.Logging.LogListener})">
            <summary>
            使用指定的 <see cref="T:CorePlus.Logging.LogListener"/> 列表初始化 <see cref="T:CorePlus.Logging.MultiLogListener"/> 的新实例。
            </summary>
            <param name="logListeners">日志记录者。</param>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.Close">
            <summary>
            关闭当前日志记录下所有记录器中使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.Dispose(System.Boolean)">
            <summary>
            释放当前实例使用的资源，可选是否释放非托管资源。
            </summary>
            <param name="disposing">如果为 true，则同时释放占用的托管与非托管资源，否则只释放托管资源。</param>
        </member>
        <member name="M:CorePlus.Logging.MultiLogListener.OnLog(CorePlus.Logging.LogEntry)">
            <summary>
            记录一个日志内容。
            </summary>
            <param name="entry">日志。</param>
        </member>
        <member name="P:CorePlus.Logging.MultiLogListener.Loggers">
            <summary>
            获取当前侦听器使用的所有侦听器对象。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.MultiLogListener.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
            <exception cref="T:System.InvalidOperationException">无法获取 MultiLogListener 的 AutoFlush 属性。</exception>
        </member>
        <member name="P:CorePlus.Logging.MultiLogListener.IsThreadSafe">
            <summary>
            获取一个值，该值指示跟踪侦听器是否是线程安全的。
            </summary>
            <value>如果跟踪侦听器是线程安全的，则为 true；否则为 false。默认值为 false。</value>
            <exception cref="T:System.InvalidOperationException">无法获取 MultiLogListener 的 IsThreadSafe 属性。</exception>
        </member>
        <member name="T:CorePlus.Logging.FilterLogListener">
            <summary>
            允许过滤日志。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.FilterLogListener._logListener">
            <summary>
            原侦听器。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.FilterLogListener.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.FilterLogListener.#ctor(CorePlus.Logging.LogListener)">
            <summary>
            包装指定的 <see cref="T:CorePlus.Logging.LogListener"/> ,并初始化 <see cref="T:CorePlus.Logging.FilterLogListener"/> 的新实例。
            </summary>
            <param name="logger">一个 <see cref="T:CorePlus.Logging.LogListener"/> 实例，将对此侦听器的消息进行过滤。</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="logger"/> 为空。</exception>
        </member>
        <member name="F:CorePlus.Logging.FilterLogListener.LogEntryFilter">
            <summary>
            获取或设置当前用于过滤日志的函数。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.FilterLogListener.OnCheck(CorePlus.Logging.LogEntry)">
            <summary>
            默认的检查函数。被子类重写时，实现不同的检查方法。
            </summary>
            <param name="entry">要检查的 <see cref="T:CorePlus.Logging.LogEntry"/> 实例。</param>
            <returns>如果继续记录此日志，则返回 true， 否则返回 false 。</returns>
        </member>
        <member name="M:CorePlus.Logging.FilterLogListener.Close">
            <summary>
            刷新输出缓冲区，并关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.FilterLogListener.Dispose(System.Boolean)">
            <summary>
            释放当前实例使用的资源，可选是否释放非托管资源。
            </summary>
            <param name="disposing">如果为 true，则同时释放占用的托管与非托管资源，否则只释放托管资源。</param>
        </member>
        <member name="M:CorePlus.Logging.FilterLogListener.OnLog(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现输出一个 <see cref="T:CorePlus.Logging.LogEntry"/> 对象的具体操作。
            </summary>
            <param name="entry">要输出的 <see cref="T:CorePlus.Logging.LogEntry"/> 对象。</param>
        </member>
        <member name="P:CorePlus.Logging.FilterLogListener.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Logging.FilterLogListener.IsThreadSafe">
            <summary>
            获取一个值，该值指示日志侦听器是否是线程安全的。
            </summary>
            <value>如果日志侦听器是线程安全的，则为 true；否则为 false。默认值为 false。</value>
        </member>
        <member name="T:CorePlus.Logging.Properties.Messages">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Properties.Messages.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Properties.Messages.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Properties.Messages.LogListenerDoesNotSupportClearBefore">
            <summary>
              查找类似 此侦听器不支持清除指定的日志。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Properties.Messages.LogListenerIndentNotSupported">
            <summary>
              查找类似 当前 LogListener 不支持缩进。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Properties.Messages.MultiLogListenerIsThreadSafeGet">
            <summary>
              查找类似 无法获取 MultiLogListener 的 IsThreadSafe 属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Properties.Messages.WebLogListenerInvalidOperation">
            <summary>
              查找类似 当前不存在可用的请求（ HttpContext.Current 是 null)。 的本地化字符串。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.ConsoleLogListener">
            <summary>
            将日志输出到控制台。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.#ctor(CorePlus.Logging.LoggingStringConverter)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.ConsoleLogListener"/> 的新实例。
            </summary>
            <param name="convert">日志转换实例。</param>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.#ctor">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.ConsoleLogListener"/> 的新实例。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.ConsoleLogListener._colors">
            <summary>
            等级的颜色列表。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.ResetColor">
            <summary>
            重置颜色配置为默认风格。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.SetColor(CorePlus.Logging.LogLevel,System.ConsoleColor)">
            <summary>
            设置用于输出指定等级的控制台字体颜色。
            </summary>
            <param name="level">要设置的日志等级。</param>
            <param name="consoleColor">要设置的控制台颜色。</param>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.ConvertLogEntry(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，将日志转为字符串。
            </summary>
            <param name="entry">日志。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.Close">
            <summary>
            刷新输出缓冲区，并关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.Clear">
            <summary>
            清除全部日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.OnLog(System.String)">
            <summary>
            当被子类重写时，实现输出一个已转为字符串的日志到缓存。
            </summary>
            <param name="message">要输出的内容。</param>
        </member>
        <member name="M:CorePlus.Logging.ConsoleLogListener.Dispose(System.Boolean)">
            <summary>
            释放当前实例使用的资源，可选是否释放非托管资源。
            </summary>
            <param name="disposing">如果为 true，则同时释放占用的托管与非托管资源，否则只释放托管资源。</param>
        </member>
        <member name="P:CorePlus.Logging.ConsoleLogListener.IsColorEnabled">
            <summary>
            获取或设置是否为不同等级的日志变换颜色输出。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.ConsoleLogListener.IsThreadSafe">
            <summary>
            获取一个值，该值指示日志侦听器是否是线程安全的。
            </summary>
            <value>如果日志侦听器是线程安全的，则为 true；否则为 false。默认值为 false。</value>
        </member>
        <member name="T:CorePlus.Logging.LogLevel">
            <summary>
            指定一个日志或信息的重要等级。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Default">
            <summary>
            默认消息等级。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Info">
            <summary>
            用于表示信息性信息。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Verbose">
            <summary>
            用于表示调试和跟踪消息。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Success">
            <summary>
            用于表示成功消息。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Warning">
            <summary>
            用于表示警告消息。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Error">
            <summary>
            用于表示错误消息。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Failure">
            <summary>
            用于表示失败消息。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.Start">
            <summary>
            逻辑操作的开始。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.LogLevel.End">
            <summary>
            逻辑操作的停止。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.LogEntry">
            <summary>
            代表一个日志项。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.#ctor(CorePlus.Logging.LogLevel)">
            <summary>
            使用空的信息和指定的等级初始化 <see cref="T:CorePlus.Logging.LogEntry"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.#ctor(System.String,CorePlus.Logging.LogLevel)">
            <summary>
            使用指定的信息和指定的等级初始化 <see cref="T:CorePlus.Logging.LogEntry"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用序列化信息初始化 <see cref="T:CorePlus.Logging.LogEntry"/> 的新实例。
            </summary>
            <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo"/>。</param>
            <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext"/>）。</param>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.ToString">
            <summary>
            返回包含 <see cref="T:System.ComponentModel.Component"/> 的名称的 <see cref="T:System.String"/>（如果有）。不应重写此方法。
            </summary>
            <returns>
            包含 <see cref="T:System.ComponentModel.Component"/> 的名称的 <see cref="T:System.String"/>（如果有）；如果 <see cref="T:System.ComponentModel.Component"/> 未命名，则为 null。
            </returns>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo"/>。
            </summary>
            <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo"/>。</param>
            <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext"/>）。</param>
            <exception cref="T:System.Security.SecurityException">调用方没有所要求的权限。</exception>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.Equals(CorePlus.Logging.LogEntry)">
            <summary>
            指示当前对象是否等于同一类型的另一个对象。
            </summary>
            <param name="other">与此对象进行比较的对象。</param>
            <returns>
            如果当前对象等于 <paramref name="other"/> 参数，则为 true；否则为 false。
            </returns>
        </member>
        <member name="M:CorePlus.Logging.LogEntry.CompareTo(CorePlus.Logging.LogEntry)">
            <summary>
            将此日志的 Time 属性与包含指定的 System.DateTime 值的指定对象相比较，并返回一个整数，该整数指示此日志的 Time 属性是早于、等于还是晚于指定的日志 Time 属性。
            </summary>
            <param name="other">要比较的 <see cref="T:CorePlus.Logging.LogEntry"/> 对象。</param>
            <returns>一个有符号数字，指示此实例的 Time 属性和 value 的 Time 属性的相对值。 值 说明 小于零 此实例的 Time 属性早于 value的 Time 属性。 零 此实例的 Time 属性与 value 的 Time 属性相同。 大于零 此实例的 Time 属性晚于 value 的 Time 属性 或 value 为 null。</returns>
        </member>
        <member name="P:CorePlus.Logging.LogEntry.Level">
            <summary>
            获取或设置日志的等级。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogEntry.Message">
            <summary>
            获取或设置日志包含的信息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.LogEntry.Time">
            <summary>
            获取或设置日志的创建时间。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.Logger">
             <summary>
             提供一组帮助您记录日志的方法和属性。
             </summary>
             <remarks>
             <para>
             <see cref="T:CorePlus.Logging.Logger"/> 同时是一个调试和保存日志的工具。但 <see cref="T:CorePlus.Logging.Logger"/> 本身不提供任何记录和保存日志的功能，所有记录日志的主体由 <see cref="P:Logger.LogListener"/> 属性指定的 <see cref="T:CorePlus.Logging.LogListener"/> 实例记录。使用不同的 <see cref="T:CorePlus.Logging.LogListener"/> 可以切换不同的日志输出目标。默认地，<see cref="T:CorePlus.Logging.Logger"/> 在 WinForm 使用 <see cref="T:CorePlus.Logging.ConsoleLogListener"/> 输出到控制台， 在 WebForm 使用 <see cref="T:CorePlus.Logging.WebLogListener"/> 输出到 Response 实例。
             
             <list type="bullet">
                 <listheader>系统自带的 <see cref="T:CorePlus.Logging.LogListener"/> 有:</listheader>
                 <item><see cref="T:CorePlus.Logging.ConsoleLogListener"/> 将日志输出到控制台。</item>
                 <item><see cref="T:CorePlus.Logging.FileLogListener"/> 将日志输出到日志文件（如 .log)。  </item>
                 <item><see cref="T:CorePlus.Logging.StreamLogListener"/> 将日志输出到流。</item>
                 <item><see cref="T:CorePlus.Logging.WebLogListener"/> 将日志输出到 <see cref="P:System.Web.HttpContext.Response"/> 。</item>
                 <item><see cref="T:CorePlus.Logging.WindowLogListener"/> 将日志输出到临时的控制台窗口。</item>
                 <item><see cref="T:CorePlus.Logging.FilterLogListener"/> 允许过滤日志。</item>
                 <item><see cref="T:CorePlus.Logging.MultiLogListener"/> 允许同时将日志记录到一个或更多个日志侦听器。</item>
             </list>
             </para>
             
             <para>
             您可以扩展 <see cref="T:CorePlus.Logging.LogListener"/> ，把日志以自定义格式输出到自定义的目标。对于需要将日志转为文本再输出(如文件) 时，<see cref="T:CorePlus.Logging.TextLogListener"/> 提供了抽象基类。
             </para>
             
             </remarks>
             <example>
             <para>
             示例一：下面的例子演示了如何使用 <see cref="T:CorePlus.Logging.Logger"/> 来记录日志。
             <code>
             Logger.Write("hello world");
             Logger.Write(new string[]{"hell", "world"});
             Logger.Write("{0} {1}", "hello", "world");
             </code>
             </para>
             
             <para>
             示例二：下面的例子演示了如何更改 <see cref="T:CorePlus.Logging.Logger"/> 记录日志的行为。
             <code>
             Logger.Listener = new WindowLogListener();  // 创建一个新的调试窗口、并将日志输出到此调试窗口。
             Logger.Write("hello");
             </code>
             </para>
             
             <para>
             示例三：下面的例子演示如何制作自己的 LogListener ，以在日志前添加编号。
             
             最后效果:
            
             <code>
             Logger.Write("a");  // -&gt;  1 a
             Logger.Write("vxx");  // -&gt;  2 vxx
             </code>
             </para>
            
             <para>
             方法1:
             
             <code>
             // 定义一个自定义的日志输出工具。
             class MyLogListener : ConsoleLogListener{
            
                int _seed = 0;
            
                protected override OnLog(string message){
                    base.OnLog((_seed++).ToString() + message);
                }
            
             }
             
            
                 //下面在程序使用
             Logger.Listener = new MyLogListener();
             Logger.Write("f") ;
             </code>
            
             方法2:
            
             <code>
             class MyLogStringConverter:LoggingStringConverter{
            
                int _seed = 0;
            
                public override string ToString(LogEntry entry){
                    return (_seed++).ToString() + base.ToString(entry);
                }
            
             }
            
            
            
               //下面在程序使用
             Logger.Listener.LoggingStringConverter = new MyLogStringConverter();
             Logger.Write("hello world") ;
             </code>
             </para>
             
             </example>
        </member>
        <member name="F:CorePlus.Logging.Logger._listener">
            <summary>
            实际使用的 <see cref="T:CorePlus.Logging.LogListener"/> 实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.#cctor">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.Logger"/> 类的静态成员。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.Indent">
            <summary>
            增加一个缩进。
            </summary>
            <remarks>
            此操作相当于 IndentLevel++ 。
            </remarks>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.Logger.Unindent">
            <summary>
            减小一个缩进。
            </summary>
            <remarks>
            此操作相当于 IndentLevel-- 。
            </remarks>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.Logger.Flush">
            <summary>
            将当前缓存的日志输出到目标中。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.Close">
            <summary>
            刷新输出缓冲区，并关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.Clear">
            <summary>
            清除全部日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.Clear(System.DateTime)">
            <summary>
            清除指定时间之前的全部日志。
            </summary>
            <param name="dt">指定的时间。在此时间之前(包括此时间)的日志都被清除。</param>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.Logger.Clear(System.Int32)">
            <summary>
            清除日志，但不删除最新的 <paramref name="maxCount"/> 个记录。
            </summary>
            <param name="maxCount">指定的最大记录数，如果剩余的日志数超过 maxCount，则清除更早的日志。</param>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除指定的日志。</exception>
        </member>
        <member name="M:CorePlus.Logging.Logger.Start">
            <summary>
            记录一个空的开始消息。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.Start(System.String)">
            <summary>
            记录一个开始消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Start(System.String,System.String[])">
            <summary>
            记录一个开始消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Warning(System.String)">
            <summary>
            记录一个警告消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Warning(System.String,System.Object[])">
            <summary>
            记录一个警告。
            </summary>
            <param name="message">需要记录的内容。</param>\
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Warning(System.Object)">
            <summary>
            记录一个警告消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.WarningIf(System.Boolean,System.String,System.Object[])">
            <summary>
            如果 <paramref name="condition"/> 等于 true，记录一个警告消息。
            </summary>
            <param name="condition">记录的条件, 只有在 <paramref name="condition"/> 为 true 时才进行记录。</param>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Error(System.String)">
            <summary>
            记录一个错误。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Error(System.String,System.Object[])">
            <summary>
            记录一个错误。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Error(System.Object)">
            <summary>
            记录一个错误。
            </summary>
            <param name="value">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Failure(System.String)">
            <summary>
            记录一个失败记录。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Failure(System.String,System.Object[])">
            <summary>
            记录一个失败记录。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Failure(System.Object)">
            <summary>
            记录一个失败记录。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Info(System.String)">
            <summary>
            记录一个信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Info(System.String,System.Object[])">
            <summary>
            记录一个信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Info(System.Object)">
            <summary>
            记录一个信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Debug(System.String)">
            <summary>
            记录调试的一个信息。当且仅当存在 DEBUG 宏时才有效。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Debug(System.Object[])">
            <summary>
            记录调试的一个信息。当且仅当存在 DEBUG 宏时才有效。
            </summary>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Debug(System.Object)">
            <summary>
            记录调试的一个信息。当且仅当存在 DEBUG 宏时才有效。
            </summary>
            <param name="value">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Trace(System.String)">
            <summary>
            记录调试的一个信息。当且仅当存在 TRACE 宏时才有效。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Trace(System.Object[])">
            <summary>
            记录调试的一个信息。当且仅当存在 TRACE 宏时才有效。
            </summary>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Trace(System.Object)">
            <summary>
            记录调试的一个信息。当且仅当存在 TRACE 宏时才有效。
            </summary>
            <param name="value">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Success">
            <summary>
            记录一个成功信息。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.Success(System.String)">
            <summary>
            记录一个成功信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Success(System.String,System.Object[])">
            <summary>
            记录一个成功信息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.End">
            <summary>
            记录一个空的结束消息。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.End(System.String)">
            <summary>
            记录一个结束消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.End(System.String,System.String[])">
            <summary>
            记录一个结束消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Write(System.String)">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Write(System.String,System.Object[])">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Write(System.Object)">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Write">
            <summary>
            记录一个空的消息。大部分时候，此操作将记录一个空行。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.Logger.WriteIf(System.Boolean,System.String,System.Object[])">
            <summary>
            如果 <paramref name="condition"/> 等于 true，则记录一个消息。
            </summary>
            <param name="condition">记录的条件, 只有在 <paramref name="condition"/> 为 true 时才进行记录。</param>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Log(System.String,CorePlus.Logging.LogLevel)">
            <summary>
            记录一个消息。
            </summary>
            <param name="message">需要记录的消息内容。</param>
            <param name="level">当前消息的等级。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Log(CorePlus.Logging.LogEntry)">
            <summary>
            记录一个消息。
            </summary>
            <param name="entry">一个 <see cref="T:CorePlus.Logging.LogEntry"/> 实例，包含需要记录的消息的全部信息。</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="entry"/> 为空。</exception>
        </member>
        <member name="M:CorePlus.Logging.Logger.Log(CorePlus.Logging.LogLevel,System.String,System.Object[])">
            <summary>
            记录一个消息。
            </summary>
            <param name="level">日志等级。</param>
            <param name="message">需要记录的消息内容。</param>
            <param name="args">包含零个或多个要格式化的对象的 System.Object 数组。</param>
        </member>
        <member name="M:CorePlus.Logging.Logger.Log(System.Object,CorePlus.Logging.LogLevel)">
            <summary>
            记录一个消息。
            </summary>
            <param name="value">需要记录的消息内容。</param>
            <param name="level">当前消息的等级。</param>
        </member>
        <member name="P:CorePlus.Logging.Logger.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IndentLevel">
            <summary>
            获取或设置输出的缩进级别。
            </summary>
            <value>缩进级别。默认值为零。</value>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="P:CorePlus.Logging.Logger.IndentSize">
            <summary>
            获取或设置缩进的空格数。
            </summary>
            <value>缩进的空格数。默认值为四。</value>
            <exception cref="T:System.NotSupportedException">此监听器不支持清除已有的日志。</exception>
        </member>
        <member name="P:CorePlus.Logging.Logger.Listerner">
            <summary>
            获取或设置正在使用的侦听器。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.Enable">
            <summary>
            设置全部信息的输出状态。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsErrorEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出错误消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsFailureEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出失败消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsInfoEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出信息性的消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsWarningEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出警告消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsSuccessEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出成功消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsDefaultLogLevelEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出默认等级的消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsVerboseEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出调试和跟踪消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.IsStepEnabled">
            <summary>
            获取或设置一个值，该值指示是否输出开始和结束消息。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.Logger.LowestLevel">
            <summary>
            设置当前日志工具允许的最低等级的日志。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.WebLogListener">
            <summary>
            将日志输出到 <see cref="P:System.Web.HttpContext.Response"/> 。
            </summary>
        </member>
        <member name="F:CorePlus.Logging.WebLogListener._colors">
            <summary>
            等级的颜色列表。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.ResetColor">
            <summary>
            重置颜色配置为默认风格。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.SetColor(CorePlus.Logging.LogLevel,System.String)">
            <summary>
            设置用于输出指定等级的控制台字体颜色。
            </summary>
            <param name="level">要设置的日志等级。</param>
            <param name="color">要设置的 HTML 颜色代码。</param>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.#ctor">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.WebLogListener"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.#ctor(CorePlus.Logging.LoggingStringConverter)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.TextLogListener"/> 的新实例。
            </summary>
            <param name="converter">日志转换实例。</param>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.ConvertLogEntry(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，将日志转为字符串。
            </summary>
            <param name="entry">日志。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.OnLog(System.String)">
            <summary>
            当被子类重写时，将日志记录到缓存。
            </summary>
            <param name="message">内容。</param>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.Flush">
            <summary>
            保存缓存中的日志。
            </summary>
        </member>
        <member name="M:CorePlus.Logging.WebLogListener.Close">
            <summary>
            刷新输出缓冲区，关闭当前日志记录使用的流。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.WebLogListener.Response">
            <summary>
            获取当前的响应。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.WebLogListener.IsColorEnabled">
            <summary>
            获取或设置是否为不同等级的日志变换颜色输出。
            </summary>
        </member>
        <member name="P:CorePlus.Logging.WebLogListener.AutoFlush">
            <summary>
            获取或设置是否在增加日志后自动使用 Flush() 输出缓存。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Logging.WebLogListener.WrappingWithHtmlCommands">
            <summary>
            获取或设置是否将输出放入注释。
            </summary>
        </member>
        <member name="T:CorePlus.Logging.FileLogListener">
            <summary>
            将日志输出到日志文件（如 .log)。
            </summary>
            <remarks>
            默认地、
            </remarks>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.ConvertLogEntry(CorePlus.Logging.LogEntry)">
            <summary>
            当被子类重写时，实现将日志转为字符串。
            </summary>
            <param name="entry">要转换的日志。</param>
            <returns>一个字符串，表示指定的日志信息。</returns>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.#ctor(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.FileLogListener"/> 的新实例。
            </summary>
            <param name="logFilePath">文件名。</param>
            <param name="append">确定是否将数据追加到文件。如果该文件存在，并且 append 为 false，则该文件被覆盖。如果该文件存在，并且 append 为 true，则数据被追加到该文件中。否则，将创建新文件。</param>
            <param name="encoding">要使用的字符编码。</param>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.#ctor(System.String,System.Text.Encoding)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.FileLogListener"/> 的新实例。
            </summary>
            <param name="logFilePath">文件名。</param>
            <param name="encoding">要使用的字符编码。</param>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.#ctor(System.String,System.Boolean,System.Text.Encoding,CorePlus.Logging.LoggingStringConverter)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.FileLogListener"/> 的新实例。
            </summary>
            <param name="logFilePath">文件名。</param>
            <param name="append">确定是否将数据追加到文件。如果该文件存在，并且 append 为 false，则该文件被覆盖。如果该文件存在，并且 append 为 true，则数据被追加到该文件中。否则，将创建新文件。</param>
            <param name="encoding">要使用的字符编码。</param>
            <param name="c">日志转换实例。</param>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.FileLogListener"/> 的新实例。
            </summary>
            <param name="logFilePath">文件名。</param>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.#ctor(System.String,CorePlus.Logging.LoggingStringConverter)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.FileLogListener"/> 的新实例。
            </summary>
            <param name="logFilePath">文件名。</param>
            <param name="c">日志转换实例。</param>
        </member>
        <member name="M:CorePlus.Logging.FileLogListener.#ctor(System.String,System.Boolean)">
            <summary>
            初始化 <see cref="T:CorePlus.Logging.FileLogListener"/> 的新实例。
            </summary>
            <param name="logFilePath">文件名。</param>
            <param name="append">确定是否将数据追加到文件。如果该文件存在，并且 append 为 false，则该文件被覆盖。如果该文件存在，并且 append 为 true，则数据被追加到该文件中。否则，将创建新文件。</param>
        </member>
        <member name="P:CorePlus.Logging.FileLogListener.FilePath">
            <summary>
            设置输出的文件。
            </summary>
        </member>
    </members>
</doc>
