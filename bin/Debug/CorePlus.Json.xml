<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CorePlus.Json</name>
    </assembly>
    <members>
        <member name="T:CorePlus.Json.JsonArray">
            <summary>
            表示 Json 的数组。
            </summary>
        </member>
        <member name="T:CorePlus.Json.IJsonObject">
            <summary>
            所有Json对象满足的接口。
            </summary>
        </member>
        <member name="M:CorePlus.Json.IJsonObject.GetJsonArray(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.IJsonObject.GetJsonObject(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.IJsonObject.GetJsonValue(System.Int32)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.IJsonObject.GetJsonArray(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.IJsonObject.GetJsonObject(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.IJsonObject.GetJsonValue(System.String)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="P:CorePlus.Json.IJsonObject.Value">
            <summary>
            获取当前对象的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.IJsonObject.Json">
            <summary>
            返回当前表达式对应的Json字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.IJsonObject.Item(System.Int32)">
            <summary>
            获取或设置指定位置的值。
            </summary>
            <param name="index">位置。</param>
            <returns>IJsonObject。</returns>
        </member>
        <member name="P:CorePlus.Json.IJsonObject.Item(System.String)">
            <summary>
            获取或设置指定名字的值。
            </summary>
            <param name="name">名。</param>
            <returns>IJsonObject。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.#ctor">
            <summary>
            初始化 Py.Json.JsonArray 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonArray.#ctor(CorePlus.Json.JsonParser)">
            <summary>
            初始化 Py.Json.JsonArray 的新实例。
            </summary>
            <param name="x">转换工具。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonArray 的新实例。
            </summary>
            <param name="json">Json。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.#ctor(System.Collections.Generic.IList{CorePlus.Json.IJsonObject})">
            <summary>
            初始化 Py.Json.JsonArray 的新实例。
            </summary>
            <param name="list">列表。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.#ctor(System.Collections.ICollection)">
            <summary>
            初始化 Py.Json.JsonArray 的新实例。
            </summary>
            <param name="collection">集合。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Add(System.String)">
            <summary>
            增加一个项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Add(System.String,System.Char)">
            <summary>
            增加一个项。
            </summary>
            <param name="value">插入的值。</param>
            <param name="quote">引号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Add(System.Int32)">
            <summary>
            增加一个项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Add(System.Double)">
            <summary>
            增加一个项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Add(System.Boolean)">
            <summary>
            增加一个项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.AddRange(System.Collections.IDictionary)">
            <summary>
            增加多项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.AddRange(System.Collections.ICollection)">
            <summary>
            增加多项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.AddRange(CorePlus.Json.JsonArray)">
            <summary>
            增加多项。
            </summary>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Insert(System.Int32,System.Object)">
            <summary>
            增加一个项。
            </summary>
            <param name="index">插入的位置。</param>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Insert(System.Int32,System.String)">
            <summary>
            增加一个项。
            </summary>
            <param name="index">插入的位置。</param>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Insert(System.Int32,System.String,System.Char)">
            <summary>
            增加一个项。
            </summary>
            <param name="index">插入的位置。</param>
            <param name="value">插入的值。</param>
            <param name="quote">引号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Insert(System.Int32,System.Int32)">
            <summary>
            增加一个项。
            </summary>
            <param name="index">插入的位置。</param>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Insert(System.Int32,System.Double)">
            <summary>
            增加一个项。
            </summary>
            <param name="index">插入的位置。</param>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Insert(System.Int32,System.Boolean)">
            <summary>
            增加一个项。
            </summary>
            <param name="index">插入的位置。</param>
            <param name="value">插入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonArray.Add">
            <summary>
            增加一个 Null 项。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonArray.GetJsonArray(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.GetJsonObject(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.GetJsonValue(System.Int32)">
            <summary>
            获取当前数组下指定位置的插入的值。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.GetJsonArray(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.GetJsonObject(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.GetJsonValue(System.String)">
            <summary>
            获取当前数组下指定位置的插入的值。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.op_Explicit(CorePlus.Json.JsonArray)~CorePlus.Json.JsonExpression">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonArray"/> 到 <see cref="T:CorePlus.Json.JsonExpression"/>的显性转换。
            </summary>
            <param name="j">数组。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.op_Explicit(CorePlus.Json.JsonArray)~CorePlus.Json.JsonObject">
            <summary>
            转换当前对象至等效的JsonObject。
            </summary>
            <returns>JsonObject。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonArray.ToArray">
            <summary>
            将当前对象的子节点所有转换为字符串，并返回合成的集合。
            </summary>
            <returns>返回的集合。</returns>
        </member>
        <member name="P:CorePlus.Json.JsonArray.Json">
            <summary>
            返回当前表达式对应的Json字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonArray.Value">
            <summary>
            获取插入的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonArray.Item(System.String)">
            <summary>
            获取或设置插入的值。
            </summary>
            <param name="name">名字。</param>
            <returns>对象。</returns>
        </member>
        <member name="T:CorePlus.Json.JsonObject">
            <summary>
            表示一个Json对象。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonObject.#ctor">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonObject.#ctor(CorePlus.Json.JsonParser)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="x">操作符。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="json">Json表达式。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.#ctor(System.Collections.IDictionary)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="map">键/值集合。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.OnAddExistKey(System.String)">
            <summary>
            忽视键存在时产生的错误。
            </summary>
            <param name="key">键名。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.AddRange(System.Collections.ICollection)">
            <summary>
            增加多个项。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.AddRange(System.Collections.IDictionary)">
            <summary>
            增加多个项。
            </summary>
            <param name="value">键值集合。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.AddRange(CorePlus.Json.JsonObject)">
            <summary>
            增加多个项。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String,System.Object)">
            <summary>
            增加一个项。
            </summary>
            <param name="key">键。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String,System.String)">
            <summary>
            增加一个项。
            </summary>
            <param name="key">键。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String,System.String,System.Char)">
            <summary>
            增加一个项。
            </summary>
            <param name="key">键。</param>
            <param name="value">值。</param>
            <param name="quote">引号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String,System.Int32)">
            <summary>
            增加一个项。
            </summary>
            <param name="key">键。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String,System.Double)">
            <summary>
            增加一个项。
            </summary>
            <param name="key">键。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String,System.Boolean)">
            <summary>
            增加一个项。
            </summary>
            <param name="key">键。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.Add(System.String)">
            <summary>
            增加一个 Null 项。
            </summary>
            <param name="key">键。</param>
        </member>
        <member name="M:CorePlus.Json.JsonObject.GetJsonArray(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.GetJsonObject(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.GetJsonValue(System.Int32)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.GetJsonArray(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.GetJsonObject(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.GetJsonValue(System.String)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.op_Explicit(CorePlus.Json.JsonObject)~CorePlus.Json.JsonExpression">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonObject"/> 到 <see cref="T:CorePlus.Json.JsonExpression"/>的显性转换。
            </summary>
            <param name="j">对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.op_Explicit(CorePlus.Json.JsonObject)~CorePlus.Json.JsonArray">
            <summary>
            转换当前对象至等效的Json数组。
            </summary>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonObject.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Json.JsonObject.Item(System.Int32)">
            <summary>
            返回指定位置的值。(不推荐使用)
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonObject.Item(System.String)">
            <summary>
            获取或设置指定键的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonObject.Json">
            <summary>
            获取或设置当前表达式对应的Json字符串。重写此函数支持更多格式。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonObject.Value">
            <summary>
            获取当前对象的值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Json.JsonParser">
            <summary>
            表示一个可用于操作Json的操作符。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonParser._index">
            <summary>
            表示当前的索引。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonParser._source">
            <summary>
            表示当前操作符的来源。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonParser.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonTokener 的新实例。
            </summary>
            <param name="json">Json。</param>
        </member>
        <member name="M:CorePlus.Json.JsonParser.Back">
            <summary>
            返回一个字节。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonParser.Next">
            <summary>
            获取下一个字符。读取不到返回  \0
            </summary>
            <returns>下一个字符。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.Next(System.Char)">
            <summary>
            获取下一个期待的字符。
            </summary>
            <param name="c">字符。</param>
            <returns>字符。</returns>
            <exception cref="T:CorePlus.RunTime.SyntaxException">需要的字符不匹配。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonParser.Next(System.Int32)">
            <summary>
            获取连续n个字符串。
            </summary>
            <param name="n">个数。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.NextClean">
            <summary>
            获取下一个非空格的字符。
            </summary>
            <returns>字符。如果读不到，返回 \0。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.NextString(System.Char)">
            <summary>
            获取一下个字符串。
            </summary>
            <param name="quote">引号，可以为 ' 或 ""</param>
            <returns>A String.</returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.NextObject">
            <summary>
            返回下一个对象， 值可以是 JSONArray, JSONObject, String, 或 JSONValue 对象。
            </summary>
            <returns>对象。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.NextKey">
            <summary>
            返回下一个键名。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="M:CorePlus.Json.JsonParser.Unescape">
            <summary>
            解码当前操作符。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonParser.Index">
            <summary>
            返回当前的索引。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonParser.CheckSyntax">
            <summary>
            获取或设置是否在语法出错时，并可忽略的情况抛出异常。
            </summary>
            <remarks>
            如下列情况，是可忽略的错误:
            [1,,1]
            {a:2,}
            但缺少括号的错误是不能忽略的， 因为缺失一个扩号会到时整个 Json 的对象改变。
            </remarks>
        </member>
        <member name="T:CorePlus.Json.Properties.Messages">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonExpected">
            <summary>
              查找类似 需要{0}，实际{1}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonExpectedOne">
            <summary>
              查找类似 需要{0}，实际{1}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonInvalidChar">
            <summary>
              查找类似 当前标记不匹配，操作失败。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonInvalidCharUse">
            <summary>
              查找类似 {0} 为非合法的字符。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonInvalidUse">
            <summary>
              查找类似 这个对象不支持此操作。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonNameNull">
            <summary>
              查找类似 Json键不能为空。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonSubString">
            <summary>
              查找类似 源字符串的长度不够。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonUnclosedComment">
            <summary>
              查找类似 未结束的注释。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonUnclosedLiteral">
            <summary>
              查找类似 字符串未结束。 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.Properties.Messages.JsonValueNull">
            <summary>
              查找类似 缺少值。 的本地化字符串。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonException">
            <summary>
            在Json处理时出现的异常。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonException.#ctor">
            <summary>
            初始化 JsonException 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonException.#ctor(System.String)">
            <summary>
            使用指定错误信息初始化 JsonException 类的新实例
            </summary>
            <param name="message">描述该错误的 System.String。message 的内容被设计为人可理解的形式。此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化</param>
        </member>
        <member name="M:CorePlus.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 JsonException 类的新实例
            </summary>
            <param name="info">保存序列化对象数据的对象</param>
            <param name="context">有关源或目标的上下文信息</param>
        </member>
        <member name="M:CorePlus.Json.JsonException.#ctor(System.String,System.Exception)">
            <summary>
            使用指定错误信息和对作为此异常原因的内部异常的引用来初始化 JsonException 类的新实例
            </summary>
            <param name="message">解释异常原因的错误信息</param>
            <param name="innerException">导致当前异常的异常。如果 innerException 参数不为null，则当前异常在处理内部异常的 catch 块中引发</param>
        </member>
        <member name="T:CorePlus.Json.JsonSyntaxException">
            <summary>
            在Json处理时出现的语法错误异常。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonSyntaxException._type">
            <summary>
            表示错误类型。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonSyntaxException._position">
            <summary>
            表示发生错误的位置。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor">
            <summary>
            初始化 JsonSyntaxException 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(CorePlus.RunTime.SyntaxErrorType)">
            <summary>
            初始化 JsonSyntaxException 的新实例。
            </summary>
            <param name="type">错误类型。</param>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(CorePlus.RunTime.SyntaxErrorType,System.Int32)">
            <summary>
            初始化 JsonSyntaxException 的新实例。
            </summary>
            <param name="type">错误类型。</param>
            <param name="position">发生错误的位置。</param>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(System.String)">
            <summary>
            使用指定错误信息初始化 JsonSyntaxException 类的新实例
            </summary>
            <param name="message">描述该错误的 System.String。message 的内容被设计为人可理解的形式。此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化</param>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(CorePlus.RunTime.SyntaxErrorType,System.String)">
            <summary>
            使用指定类型初始化 JsonSyntaxException 的新实例。
            </summary>
            <param name="type">错误种类。</param>
            <param name="message">描述该错误的 System.String。message 的内容被设计为人可理解的形式。此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(CorePlus.RunTime.SyntaxErrorType,System.String,System.Int32)">
            <summary>
            初始化 JsonSyntaxException 的新实例。
            </summary>
            <param name="type">错误种类。</param>
            <param name="message">描述该错误的 System.String。message 的内容被设计为人可理解的形式。此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
            <param name="position">发生错误的位置。</param>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 JsonSyntaxException 类的新实例
            </summary>
            <param name="info">保存序列化对象数据的对象</param>
            <param name="context">有关源或目标的上下文信息</param>
        </member>
        <member name="M:CorePlus.Json.JsonSyntaxException.#ctor(System.String,System.Exception)">
            <summary>
            使用指定错误信息和对作为此异常原因的内部异常的引用来初始化 JsonSyntaxException 类的新实例
            </summary>
            <param name="message">解释异常原因的错误信息</param>
            <param name="innerException">导致当前异常的异常。如果 innerException 参数不为null，则当前异常在处理内部异常的 catch 块中引发</param>
        </member>
        <member name="P:CorePlus.Json.JsonSyntaxException.Type">
            <summary>
            获取错误类型。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonSyntaxException.Position">
            <summary>
            获取有错误的位置。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonSerializerException">
            <summary>
            在Json序列化出现的异常。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonSerializerException.#ctor">
            <summary>
            初始化 JsonSerializerException 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonSerializerException.#ctor(System.String)">
            <summary>
            使用指定错误信息初始化 JsonSerializerException 类的新实例
            </summary>
            <param name="message">描述该错误的 System.String。message 的内容被设计为人可理解的形式。此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化</param>
        </member>
        <member name="M:CorePlus.Json.JsonSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 JsonSerializerException 类的新实例
            </summary>
            <param name="info">保存序列化对象数据的对象</param>
            <param name="context">有关源或目标的上下文信息</param>
        </member>
        <member name="M:CorePlus.Json.JsonSerializerException.#ctor(System.String,System.Exception)">
            <summary>
            使用指定错误信息和对作为此异常原因的内部异常的引用来初始化 JsonSerializerException 类的新实例
            </summary>
            <param name="message">解释异常原因的错误信息</param>
            <param name="innerException">导致当前异常的异常。如果 innerException 参数不为null，则当前异常在处理内部异常的 catch 块中引发</param>
        </member>
        <member name="T:CorePlus.Json.JsonExpression">
             <summary>
             表示任何一个Json表达式。
             </summary>
             <remarks>
             此类可作为所有 Json 表达式的入口。
             </remarks>
             <example>
             <code>
             using Py.Logging;
             using Py.Json;
             
             class Sample {
             
                 public static void Main() {
             
             
                     const string S = "{a:1, b:[2, 3], c: {2:[7] }}";
             
                     JsonExpression json = new JsonExpression(S);
             
                     Logger.Write(json["c"]["2"][0]); //  7
            
                     Logger.Write(json["c"].Json);   //  {2:[7] }
            
                     Logger.Write(json["a"].Value);
            
                     json["hh"] = new JsonArray(new int[] { 3, 4, 2, 5, 6 });
            
                     json["ss"] = new JsonBoolean(false);
            
                     Logger.Write(json.ToString());
                 }
              }
             </code>
             
             
             </example>
        </member>
        <member name="F:CorePlus.Json.JsonExpression._value">
            <summary>
            当前值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.#ctor">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。将值设为 JsonValue.Null 。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.#ctor(CorePlus.Json.IJsonObject)">
            <summary>
            使用已存在的IJsonObject生成Json对象。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.#ctor(CorePlus.Json.JsonParser)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="x">操作符。</param>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="json">Json表达式。</param>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.#ctor(System.Collections.IDictionary)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="map">键/值集合。</param>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.#ctor(System.Collections.ICollection)">
            <summary>
            初始化 Py.Json.JsonObject 的新实例。
            </summary>
            <param name="collection">值集合。</param>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonObject">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonArray">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonValue">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonBoolean">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonInt">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonString">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.op_Explicit(CorePlus.Json.JsonExpression)~CorePlus.Json.JsonDouble">
            <summary>
            实现从 <see cref="T:CorePlus.Json.JsonExpression"/> 到 <see cref="T:CorePlus.Json.JsonObject"/>的显性转换。
            </summary>
            <param name="j">Json对象。</param>
            <returns>转换的结果。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.GetJsonArray(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.GetJsonObject(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.GetJsonValue(System.Int32)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.GetJsonArray(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.GetJsonObject(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.GetJsonValue(System.String)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.Parse(System.String)">
            <summary>
            转换一个Json对象。
            </summary>
            <param name="json">Json。</param>
            <returns>IJsonObject。</returns>
            <exception cref="T:CorePlus.RunTime.SyntaxException">Json 的语法解释错误。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.TryParse(System.String,CorePlus.Json.IJsonObject@)">
            <summary>
            尝试转换一个Json。
            </summary>
            <param name="json">Json。</param>
            <param name="jsonObject">IJsonObject。</param>
            <returns>成功返回true。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.ToJson(System.Collections.IDictionary)">
            <summary>
            将一个集合转化为等效的Json字符串。
            </summary>
            <param name="dic">集合。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.ToJson(System.Collections.ICollection)">
            <summary>
            将一个集合转化为等效的Json字符串。
            </summary>
            <param name="dic">集合。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonExpression.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.IsArray">
            <summary>
            返回当前对象是否是数组。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.IsObject">
            <summary>
            返回当前对象是否是对象。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.IsValue">
            <summary>
            返回当前对象是否是内容。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.IsNull">
            <summary>
            返回当前对象是否为null。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.Value">
            <summary>
            获取当前对象的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.Json">
            <summary>
            返回当前表达式对应的Json字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.Item(System.Int32)">
            <summary>
            获取或设置指定位置的值。
            </summary>
            <param name="index">位置。</param>
            <returns>IJsonObject。</returns>
        </member>
        <member name="P:CorePlus.Json.JsonExpression.Item(System.String)">
            <summary>
            获取或设置指定名字的值。
            </summary>
            <returns>IJsonObject。</returns>
        </member>
        <member name="T:CorePlus.Json.Formatting">
            <summary>
            指示 Py.Json.JsonWriter 的格式设置选项。
            </summary>
        </member>
        <member name="F:CorePlus.Json.Formatting.None">
            <summary>
            不应用特殊的格式设置。这是默认选项。
            </summary>
        </member>
        <member name="F:CorePlus.Json.Formatting.Indented">
            <summary>
              使子元素产生缩进。
            </summary>
        </member>
        <member name="T:CorePlus.Json.WriteState">
            <summary>
            指示 <see cref="T:CorePlus.Json.JsonWriter"/> 的状态。
            </summary>
        </member>
        <member name="F:CorePlus.Json.WriteState.Start">
            <summary>
             尚未调用“写”方法。
            </summary>
        </member>
        <member name="F:CorePlus.Json.WriteState.Object">
            <summary>
            正在写入对象。
            </summary>
        </member>
        <member name="F:CorePlus.Json.WriteState.Array">
            <summary>
            正在写入数组。
            </summary>
        </member>
        <member name="F:CorePlus.Json.WriteState.Value">
            <summary>
            正在写入对象值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.WriteState.Closed">
            <summary>
            已调用 Py.Json.JsonWriter.Close() 方法。
            </summary>
        </member>
        <member name="F:CorePlus.Json.WriteState.Error">
            <summary>
            已引发异常，使 Py.Json.JsonWriter 仍处于无效状态。可以调用 Py.Json.JsonWriter.Close() 方法将  Py.Json.JsonWriter 置于 System.Xml.WriteState.Closed 状态。任何其他 Py.Json.JsonWriter 方法调用都将导致引发 System.InvalidOperationException。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonWriterSettings">
            <summary>
            指定在由 Overload:Py.Json.JsonWriter.Create 方法创建的 Py.Json.JsonWriter 对象上支持的一组功能。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriterSettings.#ctor">
            <summary>
            初始化 Py.Json.JsonWriterSettings 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriterSettings.Reset">
            <summary>
            将设置类的成员重置为各自的默认值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriterSettings.Clone">
            <summary>
             创建 Py.Json.JsonWriterSettings 实例的副本。
            </summary>
            <returns></returns>
        </member>
        <member name="P:CorePlus.Json.JsonWriterSettings.Encoding">
            <summary>
            获取或设置要使用的文本编码。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonWriterSettings.Indent">
            <summary>
            获取或设置一个值，该值指示是否缩进元素。默认不缩进。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonWriterSettings.IndentChars">
            <summary>
            获取或设置缩进时要使用的字符串。当 Indent 属性设置为 true 时使用此设置。
            </summary>
            <value>缩进时要使用的字符串。它可以设置为任何字符串值。但是，为了确保 Json 有效，应该只指定有效的空白字符，例如空格、制表符、回车符或换行符。默认值为一个空格。</value>
        </member>
        <member name="P:CorePlus.Json.JsonWriterSettings.NewLineChars">
            <summary>
            获取或设置要用于分行符的字符串。
            </summary>
            <value>要用于分行符的字符串。它可以设置为任何字符串值。但是，为了确保 Json 有效，应该只指定有效的空白字符，例如空格、制表符、回车符或换行符。默认为 \r\n（回车换行）。</value>
        </member>
        <member name="P:CorePlus.Json.JsonWriterSettings.KeySeperator">
            <summary>
            获取或设置表示键/值的分隔符。默认": " 。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonWriterSettings.QuoteChar">
            <summary>
            获取或设置默认使用哪个字符用于将字符串引起来。默认为双引号。
            </summary>
            <value>用于将属性值引起来的字符。这必须是单引号 (&#39;) 或双引号 (&#34;)。默认为双引号。</value>
        </member>
        <member name="T:CorePlus.Json.JsonWriter">
            <summary>
            表示一个输出Json的对象。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonWriter._settings">
            <summary>
            编辑器设置。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Close">
            <summary>
            当在派生类中被重写时，关闭此流和基础流。
            </summary>
            <exception cref="T:System.InvalidOperationException">在调用 Close 之后执行要编写其他输出的调用，或者此调用的结果是无效的 Json 文档。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.IO.Stream)">
            <summary>
            使用指定的流创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要写入的流。Py.Json.JsonWriter 编写 XML 1.0 文本语法并将其追加到指定的流中。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">stream 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.String)">
            <summary>
            使用指定的文件名创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="outputFileName">要写入的文件。Py.Json.JsonWriter 在指定路径上创建一个文件，并采用 Json 语法写入该文件。outputFileName 必须为文件系统路径。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">outputFileName 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.Text.StringBuilder)">
            <summary>
            使用指定的 System.Text.StringBuilder 创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要写入的 System.Text.StringBuilder。由 Py.Json.JsonWriter 写入的内容被追加到 System.Text.StringBuilder。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">builder 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.IO.TextWriter)">
            <summary>
            使用指定的 System.IO.TextWriter 创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output"> 要写入的 System.IO.TextWriter。Py.Json.JsonWriter 编写 XML 1.0 文本语法，并将该语法追加到指定  System.IO.TextWriter。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException"> text 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(CorePlus.Json.JsonWriter)">
            <summary>
            使用指定的 Py.Json.JsonWriter 对象创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要用作基础编写器的 Py.Json.JsonWriter 对象。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException"> writer 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.IO.Stream,CorePlus.Json.JsonWriterSettings)">
            <summary>
            使用流和 Py.Json.JsonWriterSettings 对象创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要写入的流。Py.Json.JsonWriter 编写 XML 1.0 文本语法并将其追加到指定的流。</param>
            <param name="settings">用于配置新的 Py.Json.JsonWriterPy.Json.JsonWriterSettings 对象 实例。如果这是 null，则使用具有默认设置的 Py.Json.JsonWriterSettings。这样可以确保所创建的 Py.Json.JsonWriter 对象的输出设置是正确的。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">stream 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.String,CorePlus.Json.JsonWriterSettings)">
            <summary>
            使用文件名和 Py.Json.JsonWriterSettings 对象创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="outputFileName">要写入的文件。Py.Json.JsonWriter 在指定路径上创建一个文件，并采用 Json 文本语法写入该文件。outputFileName 必须为文件系统路径。</param>
            <param name="settings">用于配置新的 Py.Json.JsonWriterPy.Json.JsonWriterSettings 对象 实例。如果这是 null，则使用具有默认设置的 Py.Json.JsonWriterSettings。这样可以确保所创建的 Py.Json.JsonWriter 对象的输出设置是正确的。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">url 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.Text.StringBuilder,CorePlus.Json.JsonWriterSettings)">
            <summary>
            使用 System.Text.StringBuilder 和 Py.Json.JsonWriterSettings 对象创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要写入的 System.Text.StringBuilder。由 Py.Json.JsonWriter 写入的内容被追加到 System.Text.StringBuilder。</param>
            <param name="settings">用于配置新的 Py.Json.JsonWriterPy.Json.JsonWriterSettings 对象 实例。如果这是 null，则使用具有默认设置的 Py.Json.JsonWriterSettings。这样可以确保所创建的 Py.Json.JsonWriter 对象的输出设置是正确的。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">output 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(System.IO.TextWriter,CorePlus.Json.JsonWriterSettings)">
            <summary>
            使用 System.IO.TextWriter 和 Py.Json.JsonWriterSettings 对象创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要写入的 System.IO.TextWriter。Py.Json.JsonWriter 编写 Json 文本语法，并将该语法追加到指定 System.IO.TextWriter。</param>
            <param name="settings">用于配置新的 Py.Json.JsonWriterPy.Json.JsonWriterSettings 对象 实例。如果这是 null，则使用具有默认设置的 Py.Json.JsonWriterSettings。这样可以确保所创建的 Py.Json.JsonWriter 对象的输出设置是正确的。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException">text 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Create(CorePlus.Json.JsonWriter,CorePlus.Json.JsonWriterSettings)">
            <summary>
            使用指定的 Py.Json.JsonWriter 对象创建一个新的 Py.Json.JsonWriter 实例。
            </summary>
            <param name="output">要用作基础编写器的 Py.Json.JsonWriter 对象。</param>
            <param name="settings">用于配置新的 Py.Json.JsonWriterPy.Json.JsonWriterSettings 对象 实例。如果这是 null，则使用具有默认设置的 Py.Json.JsonWriterSettings。这样可以确保所创建的 Py.Json.JsonWriter 对象的输出设置是正确的。</param>
            <returns>一个 Py.Json.JsonWriter 对象。</returns>
            <exception cref="T:System.ArgumentNullException"> writer 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Indent">
            <summary>
            增加一个缩进。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.UnIndent">
            <summary>
            减小一个缩进。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Dispose(System.Boolean)">
            <summary>
            释放由 Py.Json.JsonWriter 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
            <param name="disposing">为 true 则释放托管资源和非托管资源；为 false 则仅释放非托管资源。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.Flush">
            <summary>
            当在派生类中被重写时，将缓冲区中的所有内容刷新到基础流，并同时刷新基础流。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteNull">
            <summary>
            写入一个空值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteUndefined">
            <summary>
            写入一个未定义的值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteRaw(System.String)">
            <summary>
            写入一个json字符串，不改变编辑器的状态。
            </summary>
            <param name="json">Json字符串。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>
            当在派生类中被重写时，从字符缓冲区手动编写原始标记。
            </summary>
            <param name="buffer">字符数组，包含要写入的文本。</param>
            <param name="index">缓冲区中的位置，指示要写入文本的起始位置。</param>
            <param name="count">要写入的字符数。</param>
            <exception cref="T:System.ArgumentNullException">buffer 为 null。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index 或 count 小于零。- 或 -缓冲区长度减去 index 小于 count。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.Char)">
            <summary>
            写入一个符号。
            </summary>
            <param name="ch">符号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.String)">
            <summary>
            写入一个值 <see cref="T:System.String"/> 。
            </summary>
            <param name="value">写入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.String,System.Char)">
            <summary>
            写入一个值 <see cref="T:System.String"/> 。
            </summary>
            <param name="value">写入的值。</param>
            <param name="ch">符号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteString(System.String)">
            <summary>
            写入一个字符串。
            </summary>
            <param name="value">字符串。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.String,System.Object[])">
            <summary>
            写入一个值 <see cref="T:System.String"/> 。
            </summary>
            <param name="format">格式化的字符串。</param>
            <param name="args">参数。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteStartObject">
            <summary>
            写入数组头。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteEndObject">
            <summary>
            写入数组尾。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteStartArray">
            <summary>
            写入数组头。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteEndArray">
            <summary>
            写入数组尾。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteKey(System.String)">
            <summary>
            写入一个键。
            </summary>
            <param name="name">键名。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteKey(System.String,System.Char)">
            <summary>
            写入一个键。
            </summary>
            <param name="name">键名。</param>
            <param name="ch">额外的符号，可以是'或"符号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteField``1(System.String,``0)">
            <summary>
            写入键/值。
            </summary>
            <param name="name">键名。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteField``1(System.String,System.Char,``0)">
            <summary>
            写入键/值。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">键名。</param>
            <param name="quote">引号。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValues(System.Array)">
            <summary>
            写入一个数组。
            </summary>
            <param name="array">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValues(System.Collections.ICollection)">
            <summary>
            写入一个数组。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValues(System.Collections.IDictionary)">
            <summary>
            写入一个数组。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.Object)">
            <summary>
            写入一个 <see cref="T:System.DateTime"/> 值。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue``1(``0)">
            <summary>
            写入一个 <see cref="T:System.DateTime"/> 值。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.DateTime)">
            <summary>
            写入一个 <see cref="T:System.DateTime"/> 值。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.Boolean)">
            <summary>
            写入一个 <see cref="T:System.Boolean"/> 值。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue(System.DateTime,System.Char)">
            <summary>
            写入一个 <see cref="T:System.DateTime"/> 值。
            </summary>
            <param name="value">值。</param>
            <param name="quote">引号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteComment(System.String)">
            <summary>
            写入一个注释。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteWhitespace(System.Int32)">
            <summary>
            写入空白。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonWriter.WriteValue``1(System.Nullable{``0})">
            <summary>
            写入一个可空元素。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="P:CorePlus.Json.JsonWriter.Settings">
            <summary>
            获取编辑器设置。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonWriter.WriteState">
            <summary>
            当在派生类中被重写时，获取编写器的状态。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonTextWriter">
            <summary>
            表示提供快速、非缓存、只进方法的编写器，该方法生成包含 Json 数据（这些数据符合 Json 语法的流或文件。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextWriter._writer">
            <summary>
            向流写入对象。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextWriter._indent">
            <summary>
            缩进数。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextWriter._writeSates">
            <summary>
            编写器的状态。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextWriter._isFirst">
            <summary>
            表示当前是否为第一个元素。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.Close">
            <summary>
            关闭此流和基础流。
            </summary>
            <exception cref="T:System.Text.EncoderFallbackException">当前编码不支持显示半个 Unicode 代理项对。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.Flush">
            <summary>
            当在派生类中被重写时，将缓冲区中的所有内容刷新到基础流，并同时刷新基础流。
            </summary>
            <exception cref="T:System.IO.IOException">读写出现未知错误。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.Indent">
            <summary>
            增加一个缩进。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.UnIndent">
            <summary>
            减小一个缩进。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            初始化 Py.Json.JsonTextWriter 的新实例。
            </summary>
            <param name="w">文本编写器。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            初始化 Py.Json.JsonTextWriter 的新实例。
            </summary>
            <param name="w">要写入的流。</param>
            <param name="encoding">要生成的编码方式。如果编码方式为 null，则它以 UTF-8 的形式写出流并忽略 ProcessingInstruction 中的编码属性。</param>
            <exception cref="T:System.ArgumentNullException">stream 或 encoding 为 null。</exception>
            <exception cref="T:System.ArgumentException">stream 不可写。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>
            使用指定的文件创建 System.Xml.XmlTextWriter 类的实例。
            </summary>
            <param name="fileName">要写入的文件名。如果该文件存在，它将截断该文件并用新内容对其进行覆盖。</param>
            <param name="encoding">要生成的编码方式。如果编码方式为 null，它将以 UTF-8 的形式写出该文件，并忽略 ProcessingInstruction 中的编码属性。</param>
            <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.Dispose(System.Boolean)">
            <summary>
            释放由 Py.Json.JsonWriter 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
            <param name="disposing">为 true 则释放托管资源和非托管资源；为 false 则仅释放非托管资源。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.OnWriting(System.Boolean)">
            <summary>
            写入前的检查。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteStartObject">
            <summary>
            写入数组头。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteEndObject">
            <summary>
            写入数组尾。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteStartArray">
            <summary>
            写入数组头。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteEndArray">
            <summary>
            写入数组尾。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteKey(System.String)">
            <summary>
            写入一个键。
            </summary>
            <param name="name">键名。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteKey(System.String,System.Char)">
            <summary>
            写入一个键。
            </summary>
            <param name="name">键名。</param>
            <param name="ch">额外的符号，可以是'或"符号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteRaw(System.String)">
            <summary>
            写入一个json字符串，不改变编辑器的状态。
            </summary>
            <param name="json">Json字符串。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteValue(System.Char)">
            <summary>
            写入一个符号。
            </summary>
            <param name="ch">符号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteValue(System.String)">
            <summary>
            写入一个值 <see cref="T:System.String"/> 。
            </summary>
            <param name="value">写入的值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteString(System.String)">
            <summary>
            写入一个字符串。
            </summary>
            <param name="value">字符串。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteValue(System.String,System.Object[])">
            <summary>
            写入一个值 <see cref="T:System.String"/> 。
            </summary>
            <param name="format"></param>
            <param name="args">参数。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteComment(System.String)">
            <summary>
            写入一个注释。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteWhitespace(System.Int32)">
            <summary>
            写入空白。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextWriter.WriteValue(System.DateTime)">
            <summary>
            写入一个 <see cref="T:System.DateTime"/> 值。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.Settings">
            <summary>
            获取编辑器设置。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.WriteState">
            <summary>
            当在派生类中被重写时，获取编写器的状态。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.Encoding">
            <summary>
            获取将输出写入到其中的 System.Text.Encoding。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.NewLine">
            <summary>
            获取或设置由当前 TextWriter 使用的行结束符字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.KeySeperator">
            <summary>
            获取或设置表示键/值的分隔符。默认": " 。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.Formatting">
            <summary>
            指示如何对输出进行格式设置。(默认值为无特殊格式。)
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.IndentChars">
            <summary>
            获取或设置当 System.Xml.XmlTextWriter.Formatting 设置为 Formatting.Indented 时哪个字符用于缩进。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextWriter.QuoteChar">
            <summary>
            获取或设置默认使用哪个字符用于将字符串引起来。默认为双引号。
            </summary>
            <value>用于将属性值引起来的字符。这必须是单引号 (&#39;) 或双引号 (&#34;)。默认为双引号。</value>
        </member>
        <member name="T:CorePlus.Json.ReadState">
            <summary>
            指定读取器的状态。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.Initial">
            <summary>
            未调用 Read 方法。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.Key">
            <summary>
            读取一个键。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.Value">
            <summary>
            读取一个值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.ObjectStart">
            <summary>
            读取一个对象。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.ObjectEnd">
            <summary>
            读取一个对象。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.Comment">
            <summary>
            读取一个注释。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.ArrayStart">
            <summary>
            正在完成读取数组。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.ArrayEnd">
            <summary>
            正在完成读取数组。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.Closed">
            <summary>
             已调用 Close() 方法。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.Error">
            <summary>
            出现错误，阻止读取操作继续进行。
            </summary>
        </member>
        <member name="F:CorePlus.Json.ReadState.EndOfFile">
            <summary>
            已成功到达文件结尾。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonReaderSettings">
            <summary>
            指定在 Overload:Py.Json.JsonTextReader.Create 方法创建的 Py.Json.JsonReader 对象上支持的一组功能。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReaderSettings.#ctor">
            <summary>
            初始化 Py.Json.JsonReaderSettings 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReaderSettings.Reset">
            <summary>
            将设置类的成员重置为各自的默认值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReaderSettings.Clone">
            <summary>
             创建 Py.Json.JsonReaderSettings 实例的副本。
            </summary>
            <returns></returns>
        </member>
        <member name="P:CorePlus.Json.JsonReaderSettings.Encoding">
            <summary>
            获取或设置使用的编码。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReaderSettings.IgnoreComments">
            <summary>
            获取或设置一个值，该值指示是否忽略注释。默认为false。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReaderSettings.IgnoreWhitespace">
            <summary>
            获取或设置一个值，该值指示是否忽略无关紧要的空白。默认为true。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReaderSettings.LineNumberOffset">
            <summary>
            获取或设置 Py.Json.JsonTextReader 对象的行号偏移量。默认 0 。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReaderSettings.LinePositionOffset">
            <summary>
            获取或设置 Py.Json.JsonTextReader 对象的行位置偏移量。默认 0 。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonReader">
            <summary>
            表示提供对 Json 数据进行快速、非缓存、只进访问的读取器。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonReader._quoteChar">
            <summary>
            当前引号的字符。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonReader._settings">
            <summary>
            表示当前读取的状态。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Read">
            <summary>
            当在派生类中被重写时，从流中读取下一个节点。
            </summary>
            <returns>如果成功读取了下一个节点，则为 true；如果没有其他节点可读取，则为 false。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonReader.ReadAsBytes">
            <summary>
            当在派生类中被重写时，从流中读取指定字节。 
            </summary>
            <returns>一个字节数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Skip">
            <summary>
            跳过当前节点的子级。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Dispose(System.Boolean)">
            <summary>
            释放当前实例占用的资源。
            </summary>
            <param name="disposing">为 <c>true</c> 则释放所有资源; <c>false</c> 则只释放托管资源。</param>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Close">
            <summary>
            当在派生类中被重写时，将 Py.Json.JsonReader.ReadState 更改为 Closed。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonReader.MoveToArray">
            <summary>
            移动到一个数组。
            </summary>
            <returns>如果找到了属性，则为 true；否则为 false。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonReader.MoveToObject">
            <summary>
            移动到一个对象。
            </summary>
            <returns>如果找到了属性，则为 true；否则为 false。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonReader.MoveToValue">
            <summary>
            移动到一个值。
            </summary>
            <returns>如果找到了属性，则为 true；否则为 false。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.IO.Stream)">
            <summary>
            使用指定的流和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="input">包含 Json 数据的流。Py.Json.JsonReader 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">input 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.Uri)">
            <summary>
            使用指定的 URI 和 Py.Json.JsonReaderSettings 创建一个新的实例。
            </summary>
            <param name="inputUri"> 包含 Json 数据的文件的 URI。</param>
            <returns>用于读取 XML 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">inputUri 值为 null。</exception>
            <exception cref="T:System.IO.FileNotFoundException">无法找到由该 URI 指定的文件。</exception>
            <exception cref="T:System.UriFormatException">URI 格式不正确。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.IO.TextReader)">
            <summary>
            使用指定的流和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="input">要从中读取 Json 数据的 System.IO.TextReader。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">input 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.IO.Stream,CorePlus.Json.JsonReaderSettings)">
            <summary>
            使用指定的流和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="input">包含 Json 数据的流。Py.Json.JsonReader 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</param>
            <param name="settings">用于配置新的 Py.Json.JsonReader 实例的 Py.Json.JsonReaderSettings 对象。该值可为 null。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">input 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.Uri,CorePlus.Json.JsonReaderSettings)">
            <summary>
            使用指定的 URI 和 Py.Json.JsonReaderSettings 创建一个新的实例。
            </summary>
            <param name="inputUri"> 包含 Json 数据的文件的 URI。</param>
            <param name="settings">用于配置新的 Py.Json.JsonReader 实例的 Py.Json.JsonReaderSettings 对象。该值可为 null。</param>
            <returns>用于读取 XML 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">inputUri 值为 null。</exception>
            <exception cref="T:System.IO.FileNotFoundException">无法找到由该 URI 指定的文件。</exception>
            <exception cref="T:System.UriFormatException">URI 格式不正确。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.IO.TextReader,CorePlus.Json.JsonReaderSettings)">
            <summary>
            使用指定的流和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="input">要从中读取 Json 数据的 System.IO.TextReader。</param>
            <param name="settings">用于配置新的 Py.Json.JsonReader 的 Py.Json.JsonReaderSettings 对象。该值可为 null。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">input 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(CorePlus.Json.JsonReader,CorePlus.Json.JsonReaderSettings)">
            <summary>
            使用指定的 Py.Json.JsonReader 和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="reader">要用作基础读取器的 Py.Json.JsonReader 对象。</param>
            <param name="settings">Py.Json.JsonReaderSettings 对象用于配置新的 Py.Json.JsonReader 实例。Py.Json.JsonReaderSettings 对象的一致性级别要么必须与基础读取器的一致性级别匹配，要么必须设置为 Py.Json.ConformanceLevel.Auto。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">reader 值为 null。</exception>
            <exception cref="T:System.InvalidOperationException">Py.Json.JsonReaderSettings 对象指定的一致性级别与基础读取器的一致性级别不一致。- 或 -基础 Py.Json.JsonReader 处于 Py.Json.ReadState.Error 或 Py.Json.ReadState.Closed 状态。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.String)">
            <summary>
            使用指定的 Py.Json.JsonReader 和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="value">要用作基础读取器的 Py.Json.JsonReader 对象。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">value 值为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonReader.Create(System.String,CorePlus.Json.JsonReaderSettings)">
            <summary>
            使用指定的 Py.Json.JsonReader 和 Py.Json.JsonReaderSettings 对象创建一个新的 Py.Json.JsonReader 实例。
            </summary>
            <param name="value">要用作基础读取器的 Py.Json.JsonReader 对象。</param>
            <param name="settings">Py.Json.JsonReaderSettings 对象用于配置新的 Py.Json.JsonReader 实例。Py.Json.JsonReaderSettings 对象的一致性级别要么必须与基础读取器的一致性级别匹配，要么必须设置为 Py.Json.ConformanceLevel.Auto。</param>
            <returns>用于读取 Json 数据的 Py.Json.JsonReader 对象。</returns>
            <exception cref="T:System.ArgumentNullException">value 值为 null。</exception>
        </member>
        <member name="P:CorePlus.Json.JsonReader.ReadState">
            <summary>
            获得当前读取的状态。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReader.Settings">
            <summary>
            获取用于创建此 Py.Json.JsonTextReader 实例的 Py.Json.JsonTextReaderSettings 对象。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReader.QuoteChar">
            <summary>
            当在派生类中被重写时，获取用于括住字符的引号字符。
            </summary>
            <value>用于括住属性节点值的引号字符（" 或 '）。</value>
        </member>
        <member name="P:CorePlus.Json.JsonReader.Value">
            <summary>
            获取当前节点的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReader.Depth">
            <summary>
            当在派生类中被重写时，获取 Json 文档中当前节点的深度。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonReader.EOF">
            <summary>
            当在派生类中被重写时，获取一个值，该值指示此读取器是否定位在流的结尾。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonTextReader">
            <summary>
            表示提供对 Json 数据进行快速、非缓存、只进访问的读取器。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._reader">
            <summary>
            当前使用的读取器。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._lastChar">
            <summary>
            表示最后一个字符。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._currentLinePosition">
            <summary>
            当前位置。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._currentLineNumber">
            <summary>
            当前行号。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._depth">
            <summary>
            当前的深度。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._readStates">
            <summary>
            读取状态。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._value">
            <summary>
            当前值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonTextReader._currentState">
            <summary>
            当前正解释的状态。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonTextReader 的新实例。
            </summary>
            <param name="input">读取者。 </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> 为空。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.#ctor(System.IO.TextReader)">
            <summary>
            初始化 Py.Json.JsonTextReader 的新实例。
            </summary>
            <param name="input">读取者。 </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> 为空。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.#ctor(System.Uri)">
            <summary>
            初始化 Py.Json.JsonTextReader 的新实例。
            </summary>
            <param name="uri">地址。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.#ctor(System.IO.Stream)">
            <summary>
            初始化 Py.Json.JsonTextReader 的新实例。
            </summary>
            <param name="input">流。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            初始化 Py.Json.JsonTextReader 的新实例。
            </summary>
            <param name="input">流。</param>
            <param name="e">编码。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.MoveNext">
            <summary>
            移动至下个字符。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.Peek">
            <summary>
            预读下个字符。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.Read">
            <summary>
            从流中读取下一个节点。
            </summary>
            <returns>
            如果成功读取了下一个节点，则为 true；如果没有其他节点可读取，则为 false。
            </returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.ParseWhitespace(System.Char)">
            <summary>
            处理空白字符。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.ReadAsBytes">
            <summary>
            当在派生类中被重写时，从流中读取指定字节。
            </summary>
            <returns>一个字节数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.ParseLiteral(System.Char)">
            <summary>
            转换一个普通变量或数字。
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.ParseComment">
            <summary>
            处理注释。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.ParseString(System.Char)">
            <summary>
            转换字符串。
            </summary>
            <param name="quote">当前引号。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.Close">
            <summary>
            当在派生类中被重写时，将 Py.Json.JsonReader.ReadState 更改为 Closed。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.Dispose(System.Boolean)">
            <summary>
            释放当前实例占用的资源。
            </summary>
            <param name="disposing">为 <c>true</c> 则释放所有资源; <c>false</c> 则只释放托管资源。</param>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.MoveTo(CorePlus.Json.ReadState)">
            <summary>
            移到一个状态。
            </summary>
            <param name="s">一个状态。</param>
            <returns>是否能继续移动。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.MoveToArray">
            <summary>
            移动到一个数组。
            </summary>
            <returns>如果找到了属性，则为 true；否则为 false。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.MoveToObject">
            <summary>
            移动到一个对象。
            </summary>
            <returns>如果找到了属性，则为 true；否则为 false。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonTextReader.MoveToValue">
            <summary>
            移动到一个值。
            </summary>
            <returns>如果找到了属性，则为 true；否则为 false。</returns>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.Settings">
            <summary>
            获取用于创建此 Py.Json.JsonTextReader 实例的 Py.Json.JsonTextReaderSettings 对象。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.EOF">
            <summary>
            获取一个值，该值指示此读取器是否定位在流的结尾。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.LineNumber">
            <summary>
            获取当前行号。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.LinePosition">
            <summary>
            获取当前列。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.ReadState">
            <summary>
            获得当前读取的状态。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.Value">
            <summary>
            获取当前节点的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.Depth">
            <summary>
            当在派生类中被重写时，获取 Json 文档中当前节点的深度。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.IgnoreComments">
            <summary>
            获取或设置一个值，该值指示是否忽略注释。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonTextReader.IgnoreWhitespace">
            <summary>
            获取或设置一个值，该值指示是否忽略无关紧要的空白。默认为true。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonValue`1">
            <summary>
            表示Json中的一个常量值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonValue`1._value">
            <summary>
            当前的值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.#ctor(`0)">
            <summary>
            初始化 Py.Json.JsonValue&lt;T&gt; 的新实例。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.Equals(System.Object)">
            <summary>
            确定指定的 <see cref="T:System.Object"/> 是否等于当前的 <see cref="T:System.Object"/>。
            </summary>
            <param name="obj">与当前的 <see cref="T:System.Object"/> 进行比较的 <see cref="T:System.Object"/>。</param>
            <returns>
            如果指定的 <see cref="T:System.Object"/> 等于当前的 <see cref="T:System.Object"/>，则为 true；否则为 false。
            </returns>
            <exception cref="T:System.NullReferenceException">
            	<paramref name="obj"/> 参数为 null。</exception>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前 <see cref="T:System.Object"/> 的哈希代码。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.Parse(System.Object)">
            <summary>
            转换一个对象为JsonObject。
            </summary>
            <param name="value">值。</param>
            <returns>IJsonObject。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetJsonArray(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetJsonObject(System.Int32)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetJsonValue(System.Int32)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="index">位置。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetJsonArray(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetJsonObject(System.String)">
            <summary>
            获取当前数组下指定位置的数组。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.GetJsonValue(System.String)">
            <summary>
            获取当前数组下指定位置的值。
            </summary>
            <param name="name">名字。</param>
            <returns>数组。</returns>
        </member>
        <member name="M:CorePlus.Json.JsonValue`1.op_Implicit(CorePlus.Json.JsonValue{`0})~`0">
            <summary>
            实现从 T 到指定类型的隐形转换。
            </summary>
            <param name="i">实例。</param>
            <returns>转换后的结果。</returns>
        </member>
        <member name="P:CorePlus.Json.JsonValue`1.Value">
            <summary>
            获取当前对象的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonValue`1.Json">
            <summary>
            获取当前的Json值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonValue`1.CorePlus#Json#IJsonObject#Value">
            <summary>
            获取当前对象的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonValue`1.Item(System.Int32)">
            <summary>
            获取或设置指定位置的值。
            </summary>
            <returns>IJsonObject。</returns>
        </member>
        <member name="P:CorePlus.Json.JsonValue`1.Item(System.String)">
            <summary>
            获取或设置指定名字的值。
            </summary>
            <returns>IJsonObject。</returns>
        </member>
        <member name="T:CorePlus.Json.JsonString">
            <summary>
            表示Json中的一个字符串。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonString.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonString 的新实例。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Json.JsonString.#ctor(System.String,System.Char)">
            <summary>
            初始化 Py.Json.JsonString 的新实例。
            </summary>
            <param name="value">值。</param>
            <param name="quote">符。</param>
        </member>
        <member name="P:CorePlus.Json.JsonString.Quote">
            <summary>
            获取或设置当前的字符串的引号。'/"
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonString.Json">
            <summary>
            获取当前的Json值。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonBoolean">
            <summary>
            表示Json中的一个布尔值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonBoolean.#ctor(System.Boolean)">
            <summary>
            初始化 Py.Json.JsonBoolean 的新实例。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="F:CorePlus.Json.JsonBoolean.True">
            <summary>
            表示true的值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonBoolean.False">
            <summary>
            表示false的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonBoolean.Json">
            <summary>
            获取当前的Json值。
            </summary>
        </member>
        <member name="T:CorePlus.Json.JsonInt">
            <summary>
            表示Json中的一个整数。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonInt.#ctor(System.Int32)">
            <summary>
            初始化 Py.Json.JsonInt 的新实例。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="T:CorePlus.Json.JsonDouble">
            <summary>
            表示Json中的一个整数。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonDouble.#ctor(System.Double)">
            <summary>
            初始化 Py.Json.JsonDouble 的新实例。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="T:CorePlus.Json.JsonValue">
            <summary>
            表示Json中的一个常量值。
            </summary>
        </member>
        <member name="M:CorePlus.Json.JsonValue.#ctor(System.String)">
            <summary>
            初始化 Py.Json.JsonValue&lt;T&gt; 的新实例。
            </summary>
            <param name="value">值。</param>
        </member>
        <member name="F:CorePlus.Json.JsonValue.Null">
            <summary>
            表示null的值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonValue.Undefined">
            <summary>
            表示一个 undefined的值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonValue.NaN">
            <summary>
            表示一个 undefined的值。
            </summary>
        </member>
        <member name="F:CorePlus.Json.JsonValue.Infinity">
            <summary>
            表示一个 undefined的值。
            </summary>
        </member>
        <member name="P:CorePlus.Json.JsonValue.Json">
            <summary>
            获取当前的Json值。
            </summary>
            <value></value>
        </member>
    </members>
</doc>
