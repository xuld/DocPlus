<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JavascriptParser</name>
    </assembly>
    <members>
        <member name="T:CorePlus.Parser.Javascript.Messages">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.AssignCondition">
            <summary>
              查找类似 条件表达式是一个赋值操作 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadBreak">
            <summary>
              查找类似 无法在当前位置找到 break 的目标 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadContinue">
            <summary>
              查找类似 无法在当前位置找到 continue 的目标 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadDecimal">
            <summary>
              查找类似 科学计数法表示的数字e后面要有至少一个数字 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadHexNumber">
            <summary>
              查找类似 十六进制的整数不支持科学计数法表示 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadIdentifierPartChar">
            <summary>
              查找类似 &quot;{0}&quot; 不是合法的变量字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadIdentifierStartChar">
            <summary>
              查找类似 &quot;{0}&quot; 不是合法的变量名首字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadNamespace">
            <summary>
              查找类似 当前上下文不存在名字空间 &quot;{0}&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadNumber">
            <summary>
              查找类似 在 &quot;x&quot; 或 &quot;X&quot; 后至少应有一位十六进制的数字 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadPropertyName">
            <summary>
              查找类似 错误的属性名 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadRegExp">
            <summary>
              查找类似 正则表达式未结束 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadSwitch">
            <summary>
              查找类似 switch 语句未成功关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.BadVar">
            <summary>
              查找类似 var 需要标识符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.ConstMultiDeclared">
            <summary>
              查找类似 常量 &quot;{0}&quot; 已定义 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.DumpParam">
            <summary>
              查找类似 参数 &quot;{0}&quot; 重复定义 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.DumpPropertyName">
            <summary>
              查找类似 对象中成员 &quot;{0}&quot; 重复定义 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.ExpectedArrayIndex">
            <summary>
              查找类似 缺少索引表达式 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.ExpectedToken">
            <summary>
              查找类似 缺少 &quot;{0}&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.HasSideEffects">
            <summary>
              查找类似 HasSideEffects 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.Identifier">
            <summary>
              查找类似 标识符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.InlegalTokenType">
            <summary>
              查找类似 非法操作符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.InvalidName">
            <summary>
              查找类似 非法的名字 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.MultiCatch">
            <summary>
              查找类似 最多只能有一个 &quot;catch 语句块&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.MultiDefault">
            <summary>
              查找类似 switch 语句已经定义了 &quot;default&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoBlock">
            <summary>
              查找类似 缺少语句块 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoBracketArgs">
            <summary>
              查找类似 缺少值 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoCatchOrFinally">
            <summary>
              查找类似 try 后面缺少 catch 或 finnaly 语句块 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoFuncName">
            <summary>
              查找类似 缺少函数名字 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoInit">
            <summary>
              查找类似 变量没有初始化 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoParam">
            <summary>
              查找类似 缺少标识符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.NoWith">
            <summary>
              查找类似 在严格模式( Strict Mode ) 下不允许使用 with  的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.StrictModeName">
            <summary>
              查找类似 严格模式 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.Syntax">
            <summary>
              查找类似 语法错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.UnexpectedChar">
            <summary>
              查找类似 不能识别的字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.UnexpectedEOF">
            <summary>
              查找类似 文件意外结束 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.UnexpectedToken">
            <summary>
              查找类似 此处不应该有 &quot;{0}&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.UnterminatedMultiComment">
            <summary>
              查找类似 多行注释没有关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.UnterminatedRegExp">
            <summary>
              查找类似 正则表达式没有关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.UnterminatedStringOrChar">
            <summary>
              查找类似 字符串没有关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.VarHideArguments">
            <summary>
              查找类似 变量 &quot;{0}&quot; 覆盖了参数 &quot;{0}&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Messages.VarMultiDeclared">
            <summary>
              查找类似 变量 &quot;{0}&quot; 已定义 的本地化字符串。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Scanner">
            <summary>
            所有的扫描器的基类。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Scanner.NewLine">
            <summary>
            碰到换行符之后重新初始化位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Scanner.Select(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            返回指定的操作符，同时跳过本字符。并更新位置。
            </summary>
            <param name="type">操作符。</param>
            <returns>需要的操作符。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Scanner.Select(System.Char,CorePlus.Parser.Javascript.TokenType,CorePlus.Parser.Javascript.TokenType)">
            <summary>
            读取下一个操作符， 如果和指定的符合一致，则返回期待的操作符，否则返回默认的操作符。并更新位置。
            </summary>
            <param name="expect">比较的字符。</param>
            <param name="expectType">满足要求时的操作符。</param>
            <param name="defaultToken">未满足要求的操作符。</param>
            <returns>最后的操作符。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Scanner.LastErrorMessage">
            <summary>
            当获得 Token.Illegal 时， 返回错误原因。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Scanner.IsStrictMode">
            <summary>
            获取或设置是否启用严格模式。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TokenInfo">
            <summary>
            表示一个标识符信息。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenInfo.Type">
            <summary>
            表示标识符的类型。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenInfo.StartLocation">
            <summary>
            表示当前标识符的开始位置。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenInfo.EndLocation">
            <summary>
            表示当前标识符的结束位置。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenInfo.LiteralBuffer">
            <summary>
            表示当前标识符的字符串缓存。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.TokenInfo.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TokenInfo.Literal">
            <summary>
            获取当前标识符的字符串形式。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.JavaScriptScanner">
            <summary>
            表示一个扫描 Javascript 源码的工具。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.JavaScriptScanner.Scan">
            <summary>
            从源读取字符，并处理。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.JavaScriptScanner.ScanEscape">
            <summary>
            读取转义符开始的字符串。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.JavaScriptScanner.ScanString(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            读取一个字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.JavaScriptScanner.ScanStringNoEscape(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            读取一个字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.JavaScriptScanner.ScanIdentifierOrKeywordSpec">
            <summary>
            处理肯能带 $ _ 的关键字。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.JavaScriptScanner.ScanRegularExpressionFlags">
            <summary>
            </summary>
            <returns>字符串。</returns>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Location">
            <summary>
            代表源码内的位置。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Location.Empty">
            <summary>
            表示一个无的位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.NewLine">
            <summary>
            新建行。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.Reset(System.UInt16,System.UInt16)">
            <summary>
            重置行列。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.ToString">
            <summary>
            返回该实例的完全限定类型名。
            </summary>
            <returns>
            包含完全限定类型名的 <see cref="T:System.String"/>。
            </returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.GetHashCode">
            <summary>
            返回此实例的哈希代码。
            </summary>
            <returns>一个 32 位有符号整数，它是该实例的哈希代码。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.Equals(System.Object)">
            <summary>
            指示此实例与指定对象是否相等。
            </summary>
            <param name="obj">要比较的另一个对象。</param>
            <returns>
            如果 <paramref name="obj"/> 和该实例具有相同的类型并表示相同的值，则为 true；否则为 false。
            </returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.Equals(CorePlus.Parser.Javascript.Location)">
            <summary>
            指示此实例与指定对象是否相等。
            </summary>
            <param name="obj">要比较的另一个对象。</param>
            <returns>
            如果 <paramref name="obj"/> 和该实例具有相同的类型并表示相同的值，则为 true；否则为 false。
            </returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.CompareTo(CorePlus.Parser.Javascript.Location)">
            <summary>
            获取当前对象和指定对象的差值。
            </summary>
            <param name="other">比较的对象。</param>
            <returns>如果当前值小，返回负数，相同，返回 0 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Equality(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator ==。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="b">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Inequality(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator !=。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="b">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_LessThan(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator &lt;。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="b">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_GreaterThan(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator &gt;。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="b">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_LessThanOrEqual(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator &lt;=。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="b">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_GreaterThanOrEqual(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator &gt;=。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="b">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Addition(CorePlus.Parser.Javascript.Location,System.UInt16)">
            <summary>
            实现操作 operator +。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Subtraction(CorePlus.Parser.Javascript.Location,System.UInt16)">
            <summary>
            实现操作 operator -。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Increment(CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator +。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Decrement(CorePlus.Parser.Javascript.Location)">
            <summary>
            实现操作 operator -。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_RightShift(CorePlus.Parser.Javascript.Location,System.Int32)">
            <summary>
            实现操作 operator &gt;&gt;。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_LeftShift(CorePlus.Parser.Javascript.Location,System.Int32)">
            <summary>
            实现操作 operator &lt;&lt;。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Addition(CorePlus.Parser.Javascript.Location,System.Int32)">
            <summary>
            实现操作 operator +。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Location.op_Subtraction(CorePlus.Parser.Javascript.Location,System.Int32)">
            <summary>
            实现操作 operator -。
            </summary>
            <param name="a">要计算的第1个值。</param>
            <param name="offset">要计算的第2个值。</param>
            <returns>操作的结果。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Location.Line">
            <summary>
            获取或设置行号。 行号从 1 开始。 
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Location.Column">
            <summary>
            获取或设置列号。 列号从 1 开始。 
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Location.IsEmpty">
            <summary>
            获取一个值，该值指示当前位置是不是空地址。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ECMACharType">
            <summary>
            用于实现 ECMA3 规范的字符判断。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsWhiteSpace(System.Int32)">
            <summary>
            判断一个字符是否为空白字符。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsLineTerminator(System.Int32)">
            <summary>
            判断一个字符是否是行尾。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsLineTerminatorOrEOS(System.Int32)">
            <summary>
            判断一个字符是否是行尾。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsIdentifierStart(System.Int32)">
            <summary>
            判断一个字符是否是标识符的首字母。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsIdentifierStartNonLetter(System.Int32)">
            <summary>
            判断一个字符是否是标识符的首字母。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsIdentifierPart(System.Int32)">
            <summary>
            判断一个字符是否是标识符的某个字符。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsLetter(System.Int32)">
            <summary>
            判断一个字符是否是字符。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsDigit(System.Int32)">
            <summary>
            判断一个字符是否是数字。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsConnectorPunctuation(System.Char)">
            <summary>
            判断一个字符是否是连接符。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsHexDigit(System.Int32)">
            <summary>
            判断一个字符是否是十六进制数字。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsDecimalDigit(System.Int32)">
            <summary>
            判断一个字符是否是十进制数字。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsExponentIndicator(System.Int32)">
            <summary>
            判断是否是科学计数法的表示符。
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsRegularExpressionChar(System.Char)">
            <summary>
            判断一个字符是否是正则表达式字符。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ECMACharType.IsNonTerminator(System.Int32)">
            <summary>
            判断一个字符是否是正则表达式内不换行字符。
            </summary>
            <param name="c">要判断的字符。</param>
            <returns>如果是，则返回 true 。</returns>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Token">
            <summary>
            所有标识符的枚举。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Token.Find(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            根据标识符类型获取详细信息。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Token.GetTokenType(System.Text.StringBuilder)">
            <summary>
            根据字符串缓存获取标识符类型。
            </summary>
            <param name="value">缓存。</param>
            <returns>返回类型。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Token.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.EOS">
            <summary>
            表示流为空。 (EndOfStream 简写)
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.LParam">
            <summary>
            (
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.RParam">
            <summary>
            )
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.LBrack">
            <summary>
            [
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.RBrack">
            <summary>
            ]
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.LBrace">
            <summary>
            {
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.RBrace">
            <summary>
            }
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Colon">
            <summary>
            :
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Semicolon">
            <summary>
            ;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Period">
            <summary>
            .
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Conditional">
            <summary>
            ?
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Inc">
            <summary>
            ++
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Dec">
            <summary>
            --
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.InitVar">
            <summary>
            init_var
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.InitConst">
            <summary>
            init_const
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Assign">
            <summary>
            =
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignBitOr">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignBitXor">
            <summary>
            ^=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignBitAnd">
            <summary>
            &amp;=
            </summary>
        </member>
        <!-- 对于成员“F:CorePlus.Parser.Javascript.Token.AssignShl”忽略有格式错误的 XML 注释 -->
        <member name="F:CorePlus.Parser.Javascript.Token.AssignSar">
            <summary>
            &gt;&gt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignShr">
            <summary>
            &gt;&gt;&gt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignAdd">
            <summary>
            +=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignSub">
            <summary>
            -=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignMul">
            <summary>
            *=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignDiv">
            <summary>
            /=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.AssignMod">
            <summary>
            %=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Comma">
            <summary>
            ,
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Or">
            <summary>
            ||
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.And">
            <summary>
            &amp;&amp;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.BitOr">
            <summary>
            |
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.BitXor">
            <summary>
            ^
            </summary>
        </member>
        <!-- 对于成员“F:CorePlus.Parser.Javascript.Token.BitAnd”忽略有格式错误的 XML 注释 -->
        <member name="F:CorePlus.Parser.Javascript.Token.Shl">
            <summary>
            &lt;&lt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Sar">
            <summary>
            &gt;&gt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Shr">
            <summary>
            &gt;&gt;&gt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Add">
            <summary>
            +
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Sub">
            <summary>
            -
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Mul">
            <summary>
            *
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Div">
            <summary>
            /
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Mod">
            <summary>
            %
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Eq">
            <summary>
            =
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Ne">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.EqStrict">
            <summary>
            ==
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.NeStrict">
            <summary>
            !==
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Lt">
            <summary>
            &lt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Gt">
            <summary>
            &gt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Lte">
            <summary>
            &lt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Gte">
            <summary>
            &gt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Instanceof">
            <summary>
            instanceof
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.In">
            <summary>
            in
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Not">
            <summary>
            !
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.BitNot">
            <summary>
            ~
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Delete">
            <summary>
            delete
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Typeof">
            <summary>
            typeof
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Void">
            <summary>
            void
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Break">
            <summary>
            break
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Case">
            <summary>
            case
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Catch">
            <summary>
            catch
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Continue">
            <summary>
            continue
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Debugger">
            <summary>
            debugger
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Default">
            <summary>
            default
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Do">
            <summary>
            do
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Else">
            <summary>
            else
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Finally">
            <summary>
            finally
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.For">
            <summary>
            for
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Function">
            <summary>
            function
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.If">
            <summary>
            if
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.New">
            <summary>
            new
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Return">
            <summary>
            return
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Switch">
            <summary>
            switch
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.This">
            <summary>
            this
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Throw">
            <summary>
            throw
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Try">
            <summary>
            try
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Var">
            <summary>
            var
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.While">
            <summary>
            while
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.With">
            <summary>
            with
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Null">
            <summary>
            null
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.True">
            <summary>
            true
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.False">
            <summary>
            false
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Number">
            <summary>
            数字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.String">
            <summary>
            字符串。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Identifier">
            <summary>
            标识符。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.FutureReservedWord">
            <summary>
            未来关键字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Const">
            <summary>
            const。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Native">
            <summary>
            native。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Illegal">
            <summary>
            非法。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Token.Whitespace">
            <summary>
            空白。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TokenType">
            <summary>
            代表标识符类型。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.EOS">
            <summary>
            表示流为空。 (EndOfStream 简写)
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.LParam">
            <summary>
            (
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.RParam">
            <summary>
            )
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.LBrack">
            <summary>
            [
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.RBrack">
            <summary>
            ]
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.LBrace">
            <summary>
            {
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.RBrace">
            <summary>
            }
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Colon">
            <summary>
            :
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Semicolon">
            <summary>
            ;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Period">
            <summary>
            .
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Conditional">
            <summary>
            ?
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Inc">
            <summary>
            ++
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Dec">
            <summary>
            --
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.InitVar">
            <summary>
            init_var
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.InitConst">
            <summary>
            init_const
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Assign">
            <summary>
            =
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignBitOr">
            <summary>
            |=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignBitXor">
            <summary>
            ^=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignBitAnd">
            <summary>
            &amp;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignShl">
            <summary>
            &lt;&lt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignSar">
            <summary>
            &gt;&gt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignShr">
            <summary>
            &gt;&gt;&gt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignAdd">
            <summary>
            +=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignSub">
            <summary>
            -=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignMul">
            <summary>
            *=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignDiv">
            <summary>
            /=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.AssignMod">
            <summary>
            %=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Comma">
            <summary>
            ,
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Or">
            <summary>
            ||
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.And">
            <summary>
            &amp;&amp;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.BitOr">
            <summary>
            |
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.BitXor">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.BitAnd">
            <summary>
            &amp;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Shl">
            <summary>
            &lt;&lt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Sar">
            <summary>
            &gt;&gt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Shr">
            <summary>
            &gt;&gt;&gt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Add">
            <summary>
            +
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Sub">
            <summary>
            -
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Mul">
            <summary>
            *
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Div">
            <summary>
            /
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Mod">
            <summary>
            %
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Eq">
            <summary>
            ==
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Ne">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.EqStrict">
            <summary>
            ===
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.NeStrict">
            <summary>
            !===
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Lt">
            <summary>
            &lt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Gt">
            <summary>
            &gt;
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Lte">
            <summary>
            &lt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Gte">
            <summary>
            &gt;=
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Instanceof">
            <summary>
            instanceof
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.In">
            <summary>
            in
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Not">
            <summary>
            !
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.BitNot">
            <summary>
            ~
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Delete">
            <summary>
            delete
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Typeof">
            <summary>
            typeof
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Void">
            <summary>
            void
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Break">
            <summary>
            break
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Case">
            <summary>
            case
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Catch">
            <summary>
            catch
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Continue">
            <summary>
            continue
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Debugger">
            <summary>
            debugger
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Default">
            <summary>
            default
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Do">
            <summary>
            do
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Else">
            <summary>
            else
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Finally">
            <summary>
            finally
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.For">
            <summary>
            for
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Function">
            <summary>
            function
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.If">
            <summary>
            if
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.New">
            <summary>
            new
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Return">
            <summary>
            return
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Switch">
            <summary>
            switch
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.This">
            <summary>
            this
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Throw">
            <summary>
            throw
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Try">
            <summary>
            try
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Var">
            <summary>
            var
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.While">
            <summary>
            while
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.With">
            <summary>
            with
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.FutureReservedWord">
            <summary>
            未来关键字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Const">
            <summary>
            const。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Native">
            <summary>
            native。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Yield">
            <summary>
            yield
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Let">
            <summary>
            let
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.NullLiteral">
            <summary>
            null
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.TrueLiteral">
            <summary>
            true
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.FalseLiteral">
            <summary>
            false
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.NumberLiteral">
            <summary>
            数字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.DecimalLiteral">
            <summary>
            十进制数字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.HexIntegerLiteral">
            <summary>
            十六进制数字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.OctalIntegerLiteral">
            <summary>
            八进制数字。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.StringLiteral">
            <summary>
            字符串。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.CharLiteral">
            <summary>
            字符。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Identifier">
            <summary>
            标识符。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Illegal">
            <summary>
            非法。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.Whitespace">
            <summary>
            空白。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.SingleLineComment">
            <summary>
            //
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.MultiLineComment">
            <summary>
            /*
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.TokenType.At">
            <summary>
            @
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.IAstVisitor.VisitIdentifier(CorePlus.Parser.Javascript.Identifier)">
            <summary>
            访问一个标识符。
            </summary>
            <param name="identifier">标识符。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.DefaultErrorReporter">
            <summary>
            默认的使用控制台的错误报告工具。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.IErrorReporter">
            <summary>
            表示一个用于显示错误信息的工具类。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.NodeEnd">
            <summary>
            对节点终止类型的枚举。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.CodeWriter">
            <summary>
            表示书写代码的工具。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CodeWriter.INDENTCHARS">
            <summary>
            配置文件内表示缩进的标记。不要随便改变。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CodeWriter.NEWLINE">
            <summary>
            配置文件内表示隔行的标记。不要随便改变。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CodeWriter.CATHESIZE">
            <summary>
            缩略字符串的缓存数。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CodeWriter.txtWriter">
            <summary>
            使用的文件流。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CodeWriter.indents">
            <summary>
            当前的缩进数。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CodeWriter._indentCe">
            <summary>
            缩略字符串的缓存。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.String,System.String,System.IO.Stream)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="p">项目。</param>
            <param name="stream">流。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="p">项目。</param>
            <param name="path">文件的物理位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="p">项目。</param>
            <param name="path">文件的物理位置。</param>
            <param name="encoding">文件编码。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.IO.TextWriter)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="sb">StringBuilder。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.String)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="filePath">位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.Text.StringBuilder)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="sb">StringBuilder。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.String,System.String,System.IO.TextWriter)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="p">项目。</param>
            <param name="sb">StringBuilder。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.#ctor(System.String,System.String,System.Text.StringBuilder)">
            <summary>
            初始化 Play.Site.Designer.CodeWriter 的新实例。
            </summary>
            <param name="p">项目。</param>
            <param name="sb">StringBuilder。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Indent">
            <summary>
            增加缩进。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.UnIndent">
            <summary>
            减小缩进。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.InitIndents">
            <summary>
            初始化缩进信息，由构造函数调用。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Close">
            <summary>
            关闭当前编写器并释放任何与该编写器关联的系统资源。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Dispose">
            <summary>
            释放由此 <see cref="T:System.IO.TextWriter"/> 对象使用的所有资源。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Flush">
            <summary>
            清理当前编写器的所有缓冲区，使所有缓冲数据写入基础设备。
            </summary>
        </member>
        <!-- 对于成员“M:CorePlus.Parser.Javascript.CodeWriter.WriteIndent”忽略有格式错误的 XML 注释 -->
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteLine(System.String,System.Object[])">
            <summary>
            写入一个代码。
            </summary>
            <param name="value">要写入的内容。</param>
            <param name="args">参数。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteLine(System.String)">
            <summary>
            写入一个代码。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteLine">
            <summary>
            写入一个空行。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteSperatorLine">
            <summary>
            写入一个用来分隔的行。 比如两个对象间的空行
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.String,System.Object[])">
            <summary>
            写入一个代码。
            </summary>
            <param name="value">要写入的内容。</param>
            <param name="args">参数。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.String)">
            <summary>
            在当前流写入一个字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.Char)">
            <summary>
            在当前流写入一个字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.Int32)">
            <summary>
            在当前流写入一个字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.Object)">
            <summary>
            在当前流写入一个字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.Int64)">
            <summary>
            在当前流写入一个字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.Write(System.UInt64)">
            <summary>
            在当前流写入一个字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteWithWhitespace(System.String)">
            <summary>
            写入一个空格，然后写入指定的字符串。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteSingleLine(System.String)">
            <summary>
            写入单独一行的字符串，并在前面写入缩进。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteSingleLine(System.String,System.String,System.String)">
            <summary>
            写入单独一行的字符串，并在前面写入缩进。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteSingleLine(System.String[])">
            <summary>
            写入单独一行的字符串，并在前面写入缩进。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CodeWriter.WriteMultiLine(System.String)">
            <summary>
            写入单独一行的字符串，并在前面写入缩进。
            </summary>
            <param name="value">要写入的内容。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CodeWriter.Encoding">
            <summary>
            返回用来写输出的 <see cref="T:System.Text.Encoding"/>。
            </summary>
            <returns>用来写入输出的 Encoding。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CodeWriter.Indents">
            <summary>
            获取当前的缩进数。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CodeWriter.NewLine">
            <summary>
            获取或设置由当前 TextWriter 使用的行结束符字符串。
            </summary>
            <returns>当前 TextWriter 的行结束符字符串。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CodeWriter.IndentChars">
            <summary>
            获取和设置缩进用字符串。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CodeWriter.IndentString">
            <summary>
            返回当前缩进量的字符串。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Parser">
            <summary>
            用于生成语法树的工具。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Parser._scanner">
            <summary>
            当前扫描器。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Parser._currentScope">
            <summary>
            当前作用域。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Parser._breakableBlock">
            <summary>
            当前跳转语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Parser._checkStrictMode">
            <summary>
            是否检查当前是否启用严格模式。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Parser._sourceName">
            <summary>
            当前文件源。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.#ctor">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.Parser"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.#ctor(CorePlus.Parser.Javascript.Scanner,CorePlus.Parser.Javascript.IErrorReporter)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.Parser"/> 的新实例。
            </summary>
            <param name="source">源。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ParseString(System.String)">
            <summary>
            解析指定的文档 。
            </summary>
            <param name="souceCode">要操作的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.Parse(CorePlus.IO.TextBuffer,System.String)">
            <summary>
            解析指定的文档 。
            </summary>
            <param name="souceCode">要操作的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.Parse(CorePlus.IO.TextBuffer,System.String,System.Boolean)">
            <summary>
            解析指定的扫描器。可选是否返回函数或脚本。
            </summary>
            <param name="source">要解析的源。</param>
            <param name="sourceName">源名，如果是函数，则为函数名。否则是脚本名。</param>
            <param name="returnFunction">如果是 true， 则返回函数。否则返回脚本。</param>
            <returns>解析的结果。实现 IScope 的实例。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.Parse(CorePlus.Parser.Javascript.Script,System.String)">
            <summary>
            进行解析。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.Parse(CorePlus.Parser.Javascript.FunctionExpression,System.String)">
            <summary>
            进行解析。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.MatchToken(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            如果下一个操作符和指定的操作符 <paramref name="token"/> 一致， 则移动到下一个操作符 。
            </summary>
            <param name="token">需要获取的操作符 。</param>
            <returns>如果当前操作符符合指定的操作符且移动位置， 返回 true; 否则返回 false 。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.AssertToken(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            确认下一个标识符是指定的标识符<paramref name="token"/>。
            </summary>
            <param name="token">期待的下一个操作符。</param>
            <param name="message">错误信息。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ExpectToken(CorePlus.Parser.Javascript.TokenType,System.String)">
            <summary>
            确保下一个 Token 为指定的 <paramref name="token"/> ，否则输出错误。
            </summary>
            <param name="token">期待的下一个操作符。</param>
            <param name="message">错误信息。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ExpectToken(CorePlus.Parser.Javascript.TokenType)">
            <summary>
            确保下一个 Token 为指定的 <paramref name="token"/> ，否则输出错误。
            </summary>
            <param name="token">期待的下一个操作符。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.EnterBlock(CorePlus.Parser.Javascript.BreakableStatement)">
            <summary>
            表示进入可中断循环(比如 break/continue 能直接搜索的)。
            </summary>
            <param name="loopLabel"></param>
            <param name="doPushScope"></param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ExitBlock">
            <summary>
            表示离开一个中断循环块。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ParseExpression(System.Boolean)">
            <summary>
            解析表达式。
            </summary>
            <param name="disallowIn">是否在 for 初始化区。</param>
            <returns>表达式节点。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ParseObjectLiteral">
            <summary>
            Parses the object literal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ParseVariableStatement(System.Boolean)">
            <summary>
            解析 var/const/let 内变量的定义。
            </summary>
            <param name="inFor">是否在 for 内。</param>
            <param name="declType">类型。</param>
            <returns>变量定义语句。</returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Parser.ParseVariableDeclarationList(System.Boolean,CorePlus.Parser.Javascript.TokenType)">
            <summary>
            解析变量定义列表。
            </summary>
            <param name="disallowIn">是否在 for 内。</param>
            <param name="declType">类型。</param>
            <returns>变量定义语句。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.Scanner">
            <summary>
            获取当前的扫描器。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.CurrentScript">
            <summary>
            获取当前的脚本域。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.ErrorCount">
            <summary>
            获取当前的错误数。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.WarnCount">
            <summary>
            获取当前的警告数。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.ErrorReporter">
            <summary>
            获取或设置当前错误报告工具。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.IsStrictMode">
            <summary>
            获取或设置当前转换器是否为严格模式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Parser.DoParseParamExpression">
            <summary>
            获取或设置是否保留括号。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.FunctionType">
            <summary>
            函数类型。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Statement">
            <summary>
            表示一个语句。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Node">
            <summary>
            为所有节点提供抽象基类。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Node.#ctor">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.Node"/> 的新实例。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Node.Accept(CorePlus.Parser.Javascript.IAstVisitor)">
            <summary>
            接受子节点
            </summary>
            <param name="visitor"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Node.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Node.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Node.StartLocation">
            <summary>
            获取开始位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Node.EndLocation">
            <summary>
            获取结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Statement.#ctor(CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.Statement"/> 的新实例。
            </summary>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Statement.IsEmpty">
            <summary>
            获取当前是否为空语句。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.LabelSet">
            <summary>
            表示 label 集合。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.BreakableStatement">
            <summary>
            表示一个可中断的语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.BreakableStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.BreakableStatement"/> 的新实例。
            </summary>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BreakableStatement.Parent">
            <summary>
            获取或设置当前的父语句块。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BreakableStatement.Labels">
            <summary>
            获取标签。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Block">
            <summary>
            表示一个脚本块。 
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.IScopeNode">
            <summary>
            表示一个函数或一个脚本。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Block._statements">
            <summary>
            当前的全部语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.Block.endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Block.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.Block"/> 的新实例。
            </summary>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Block.GetDefinedBlock(System.String)">
            <summary>
            在当前块和父块搜索已经定义了变量名为 <paramref name="name"/> 的块。
            </summary>
            <param name="name">查找的名字。</param>
            <returns>返回找到块。如果找不到返回 null 。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Block.Statements">
            <summary>
            获取当前的全部语句。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Block.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Block.IsInlineable">
            <summary>
            返回当前语句是否简单。
            </summary>
            <returns>如果可以内联，返回 true 。</returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Block.IsInitizlizerBlock">
            <summary>
            获取当前块是否为初始化的块 。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.VariableStatement._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.VariableStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.EmptyStatement">
            <summary>
            空语句。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.EmptyStatement.IsEmpty">
            <summary>
            获取当前是否为空语句。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.IterationStatement">
            <summary>
            表示一个可迭代语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.IterationStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.IterationStatement"/> 的新实例。
            </summary>
            <param name="body">主体。</param>
            <param name="continueTarget">执行continue后的跳转。</param>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.IterationStatement.Body">
            <summary>
            获取主体。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.LabelledStatement">
            <summary>
            表示一个层语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.LabelledStatement.#ctor(CorePlus.Parser.Javascript.Identifier,CorePlus.Parser.Javascript.Statement)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.LabelledStatement"/> 的新实例。
            </summary>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.DoWhileStatement">
            <summary>
            表示一个Do-While语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.DoWhileStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.DoWhileStatement"/> 的新实例。
            </summary>
            <param name="condition">条件。</param>
            <param name="body">主体。</param>
            <param name="continueTarget">执行continue后的跳转。</param>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="F:CorePlus.Parser.Javascript.DoWhileStatement.endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.DoWhileStatement.Condition">
            <summary>
            获取条件。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.WhileStatement">
            <summary>
            表示一个While语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.WhileStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.WhileStatement"/> 的新实例。
            </summary>
            <param name="condition">条件。</param>
            <param name="body">主体。</param>
            <param name="continueTarget">执行continue后的跳转。</param>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.WhileStatement.Condition">
            <summary>
            获取条件。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ForStatement">
            <summary>
            表示一个For语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ForStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ForStatement"/> 的新实例。
            </summary>
            <param name="initStatement">初始化语句。</param>
            <param name="condition">条件。</param>
            <param name="nextStatement">下一次语句。</param>
            <param name="body">主体。</param>
            <param name="continueTarget">执行continue后的跳转。</param>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ForStatement.InitStatement">
            <summary>
            获取初始化语句。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ForStatement.Condition">
            <summary>
            获取条件。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ForStatement.NextExpression">
            <summary>
            获取下一次语句。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ForInStatement">
            <summary>
            表示一个For-In语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ForInStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ForInStatement"/> 的新实例。
            </summary>
            <param name="each">Each表达式。</param>
            <param name="enumerable">可迭代的对象。</param>
            <param name="body">主体。</param>
            <param name="continueTarget">执行continue后的跳转。</param>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ForInStatement.Each">
            <summary>
            获取Each表达式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ForInStatement.Enumerable">
            <summary>
            获取可迭代的对象。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ExpressionStatement">
            <summary>
            表示一个表达式语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ExpressionStatement.#ctor(CorePlus.Parser.Javascript.Expression)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ExpressionStatement"/> 的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ExpressionStatement.Expression">
            <summary>
            获取表达式。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ContinueStatement">
            <summary>
            表示一个Continue语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ContinueStatement._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ContinueStatement.#ctor(CorePlus.Parser.Javascript.IterationStatement,System.String,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ContinueStatement"/> 的新实例。
            </summary>
            <param name="target">目标。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ContinueStatement.Target">
            <summary>
            获取目标。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ContinueStatement.Label">
            <summary>
            获取层。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ContinueStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.BreakStatement">
            <summary>
            表示一个Break语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.BreakStatement._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.BreakStatement.#ctor(CorePlus.Parser.Javascript.BreakableStatement,System.String,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.BreakStatement"/> 的新实例。
            </summary>
            <param name="target">目标。</param>
            <param name="label">层。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BreakStatement.Target">
            <summary>
            获取目标。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BreakStatement.Label">
            <summary>
            获取层。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BreakStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ReturnStatement">
            <summary>
            表示一个Return语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ReturnStatement._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ReturnStatement.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ReturnStatement"/> 的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ReturnStatement.Expression">
            <summary>
            获取表达式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ReturnStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ThrowStatement">
            <summary>
            表示一个Throw表达式。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ThrowStatement.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ThrowStatement"/>  的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ThrowStatement.Expression">
            <summary>
            获取表达式。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.WithStatement">
            <summary>
            表示一个With语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.WithStatement.endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.WithStatement.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.WithStatement"/> 的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.WithStatement.Body">
            <summary>
            获取当前的全部语句。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.WithStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Parser.Javascript.WithStatement.Expression">
            <summary>
            获取表达式。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.CaseClause">
            <summary>
            表示一个Case层。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CaseClause._statements">
            <summary>
            当前的全部语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CaseClause._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CaseClause.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.CaseClause"/> 的新实例。
            </summary>
            <param name="label">层。</param>
            <param name="target">目标。</param>
            <param name="isDefault">是否为默认的case。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CaseClause.Statements">
            <summary>
            获取当前的全部语句。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CaseClause.Label">
            <summary>
            获取层。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CaseClause.IsDefault">
            <summary>
            获取是否为默认的case。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CaseClause.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.SwitchStatement">
            <summary>
            表示一个Switch语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.SwitchStatement.endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.SwitchStatement.#ctor(CorePlus.Parser.Javascript.LabelSet,CorePlus.Parser.Javascript.NodeList{CorePlus.Parser.Javascript.CaseClause},CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.SwitchStatement"/> 的新实例。
            </summary>
            <param name="cases">选项。</param>
            <param name="breakTarget">中断后的目标语句。</param>
            <param name="label">标签。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.SwitchStatement.Cases">
            <summary>
            获取选项。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.IfStatement">
            <summary>
            表示 If 语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.IfStatement._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.IfStatement.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Statement,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.IfStatement"/> 的新实例。
            </summary>
            <param name="condition">条件。</param>
            <param name="thenStatmement">当前的则的部分。</param>
            <param name="elseStatmement">当前的否则的部分。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.IfStatement.Condition">
            <summary>
            获取条件。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.IfStatement.Then">
            <summary>
            获取当前的则的部分。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.IfStatement.Else">
            <summary>
            获取当前的否则的部分。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.IfStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TryStatement">
            <summary>
            表示一个Try语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.TryStatement.#ctor(CorePlus.Parser.Javascript.Block,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.TryStatement"/> 的新实例。
            </summary>
            <param name="tryBlock">try语句块。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TryStatement.TryBlock">
            <summary>
            获取 try 语句块。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TryCatchStatement">
            <summary>
            表示一个Try-Catch语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.TryCatchStatement.#ctor(CorePlus.Parser.Javascript.Block,System.String,CorePlus.Parser.Javascript.Block,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.TryCatchStatement"/> 的新实例。
            </summary>
            <param name="tryBlock">try语句块。</param>
            <param name="catchVar">catch变量。</param>
            <param name="catchBlock">catch语句块。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TryCatchStatement.CatchBlock">
            <summary>
            获取 catch 语句块。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TryCatchStatement.CatchVar">
            <summary>
            获取 catch 变量。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TryFinallyStatement">
            <summary>
            表示一个Try-Finally语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.TryFinallyStatement.#ctor(CorePlus.Parser.Javascript.Block,CorePlus.Parser.Javascript.Block,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.TryFinallyStatement"/> 的新实例。
            </summary>
            <param name="tryBlock">try语句块。</param>
            <param name="finallyBlock">finally语句块。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TryFinallyStatement.FinallyBlock">
            <summary>
            获取 finally 语句块。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TryCatchFinallyStatement">
            <summary>
            表示一个TryCatchFinally语句块。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.TryCatchFinallyStatement.#ctor(CorePlus.Parser.Javascript.Block,System.String,CorePlus.Parser.Javascript.Block,CorePlus.Parser.Javascript.Block,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.TryCatchFinallyStatement"/> 的新实例。
            </summary>
            <param name="tryBlock">try语句块。</param>
            <param name="catchVar">catch变量。</param>
            <param name="catchBlock">catch语句块。</param>
            <param name="finallyBlock">finally语句块。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TryCatchFinallyStatement.CatchBlock">
            <summary>
            获取 catch 语句块。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TryCatchFinallyStatement.CatchVar">
            <summary>
            获取 catch 变量。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.DebuggerStatement">
            <summary>
            表示一个可调试语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.DebuggerStatement._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.DebuggerStatement.#ctor(CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.DebuggerStatement"/> 的新实例。
            </summary>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.DebuggerStatement.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Script">
            <summary>
            表示最高级别的脚本块。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.NodeList`1">
            <summary>
            内部使用的节点集合。
            </summary>
            <typeparam name="T">节点类型。</typeparam>
        </member>
        <member name="T:CorePlus.Parser.Javascript.VariableDeclaration">
            <summary>
            变量定义节点。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.Expression">
            <summary>
            表示一个表达式。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.Expression.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ParamedExpression">
            <summary>
            表示用括号括起来的表达式。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ParamedExpression._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ParamedExpression.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ILiteral">
            <summary>
            表示常量。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ILiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.Identifier.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.StringLiteral">
            <summary>
            表示一个字面常量。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.StringLiteral._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.StringLiteral.#ctor(System.String,System.Char,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.StringLiteral"/>  的新实例。
            </summary>
            <param name="value">值。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.StringLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.StringLiteral.Value">
            <summary>
            获取值。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.StringLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.NumberLiteral">
            <summary>
            表示一个字面常量。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.NumberLiteral.#ctor(System.String,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.StringLiteral"/>  的新实例。
            </summary>
            <param name="value">值。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.NumberLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NumberLiteral.Value">
            <summary>
            获取值。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NumberLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.NullLiteral">
            <summary>
            标识符的常量。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.NullLiteral.#ctor(CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.StringLiteral"/>  的新实例。
            </summary>=
            <param name="location">开始位置。</param>=
        </member>
        <member name="M:CorePlus.Parser.Javascript.NullLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NullLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NullLiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ThisLiteral">
            <summary>
            标识符的常量。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ThisLiteral.#ctor(CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.StringLiteral"/>  的新实例。
            </summary>=
            <param name="location">开始位置。</param>=
        </member>
        <member name="M:CorePlus.Parser.Javascript.ThisLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ThisLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ThisLiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.TrueLiteral">
            <summary>
            标识符的常量。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.TrueLiteral.#ctor(CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.TrueLiteral"/>  的新实例。
            </summary>
            <param name="location">开始位置。</param>=
        </member>
        <member name="M:CorePlus.Parser.Javascript.TrueLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TrueLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.TrueLiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.FalseLiteral">
            <summary>
            标识符的常量。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.FalseLiteral.#ctor(CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.StringLiteral"/>  的新实例。
            </summary>
            <param name="location">开始位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.FalseLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FalseLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FalseLiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ObjectLiteral">
            <summary>
            表示一个对象常量。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ObjectLiteral.#ctor(CorePlus.Parser.Javascript.NodeList{CorePlus.Parser.Javascript.ObjectLiteral.Property},CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ObjectLiteral"/>  的新实例。
            </summary>
            <param name="value">值。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ObjectLiteral.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ObjectLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ObjectLiteral.Value">
            <summary>
            获取值。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ObjectLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ObjectLiteral.CorePlus#Parser#Javascript#ILiteral#Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType">
            <summary>
            对属性实现方式的枚举。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType.Constant">
            <summary>
            常量属性。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType.Computed">
            <summary>
            动态属性。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType.Materiablized">
            <summary>
            动态常量。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType.Getter">
            <summary>
            Getter。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType.Setter">
            <summary>
            Setter。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ObjectLiteral.PropertyType.Prototype">
            <summary>
            Prototype。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ObjectLiteral.Property">
            <summary>
            表示 ObjectLiteral 的 键/值 属性对。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ObjectLiteral.Property.#ctor(CorePlus.Parser.Javascript.ObjectLiteral.PropertyType,CorePlus.Parser.Javascript.ILiteral,CorePlus.Parser.Javascript.Expression)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ObjectLiteral.Property"/> 的新实例。
            </summary>
            <param name="type">类型。</param>
            <param name="key">键。</param>
            <param name="value">值。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ObjectLiteral.Property.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ObjectLiteral.Property.Type">
            <summary>
            获取属性的类型。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ObjectLiteral.Property.Key">
            <summary>
            获取属性的键。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ObjectLiteral.Property.Value">
            <summary>
            获取属性的值。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.RegExpLiteral">
            <summary>
            表示一个正则表达式常量。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.RegExpLiteral._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.RegExpLiteral.#ctor(System.String,System.String,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.RegExpLiteral"/>  的新实例。
            </summary>
            <param name="pattern">模式。</param>
            <param name="flags">标记。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.RegExpLiteral.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.RegExpLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.RegExpLiteral.Pattern">
            <summary>
            获取模式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.RegExpLiteral.Flags">
            <summary>
            获取标记。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.RegExpLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Parser.Javascript.RegExpLiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ArrayLiteral">
            <summary>
            表示一个数组表达式。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.ArrayLiteral._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ArrayLiteral.#ctor(CorePlus.Parser.Javascript.NodeList{CorePlus.Parser.Javascript.Expression},CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ArrayLiteral"/>  的新实例。
            </summary>
            <param name="values">值。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ArrayLiteral.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ArrayLiteral.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ArrayLiteral.Values">
            <summary>
            获取值。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ArrayLiteral.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ArrayLiteral.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.FunctionExpression">
            <summary>
            表示一个函数表达式。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.FunctionExpression.#ctor(System.String,System.Collections.Generic.List{CorePlus.Parser.Javascript.ILiteral},CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.FunctionExpression"/>  的新实例。
            </summary>
            <param name="scope">作用域。</param>
            <param name="body">主体。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FunctionExpression.Name">
            <summary>
            获取名字。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FunctionExpression.Statements">
            <summary>
            获取主体。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FunctionExpression.endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FunctionExpression.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="P:CorePlus.Parser.Javascript.FunctionExpression.Value">
            <summary>
            获取当前文本真正的字符串值。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.CallExpression">
            <summary>
            表示一个Call语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CallExpression._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CallExpression.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.CallExpression"/>  的新实例。
            </summary>
            <param name="target">目标。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CallExpression.Target">
            <summary>
            获取目标。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CallExpression.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.FunctionCallExpression">
            <summary>
            表示通过函数形式的调用。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.FunctionCallExpression.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.IndexCallExpression">
            <summary>
            表示通过数组形式的调用。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.IndexCallExpression.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.PropertyCallExpression">
            <summary>
            表示通过.形式的调用。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.PropertyCallExpression.Write(CorePlus.Parser.Javascript.CodeWriter)">
            <summary>
            将当前节点写入指定的 CodeWriter 。
            </summary>
            <param name="writer">写入工具。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.NewExpression">
            <summary>
            表示一个New语句。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.NewExpression._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.NewExpression.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.ArgumentList,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.NewExpression"/>  的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="arguments">参数。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NewExpression.Expression">
            <summary>
            获取表达式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NewExpression.Arguments">
            <summary>
            获取参数。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.NewExpression.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.CallNative">
            <summary>
            表示一个执行本地函数。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.CallNative._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.CallNative.#ctor(System.String,System.Type,CorePlus.Parser.Javascript.ArgumentList,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.CallNative"/>  的新实例。
            </summary>
            <param name="name">名字。</param>
            <param name="function">本地函数。</param>
            <param name="arguments">参数。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CallNative.Name">
            <summary>
            获取名字。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CallNative.Function">
            <summary>
            获取本地函数。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CallNative.Arguments">
            <summary>
            获取参数。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.CallNative.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.UnaryExpression">
            <summary>
            表示一个单目运算。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.UnaryExpression.#ctor(CorePlus.Parser.Javascript.TokenType,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.UnaryExpression"/>  的新实例。
            </summary>
            <param name="operatorToken">操作符。</param>
            <param name="expression">表达式。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.UnaryExpression.Expression">
            <summary>
            获取表达式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.UnaryExpression.Operator">
            <summary>
            获取操作符。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.BinaryExpression">
            <summary>
            表示一个二进制运算。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.BinaryExpression.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.TokenType,CorePlus.Parser.Javascript.Expression)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.BinaryExpression"/>  的新实例。
            </summary>
            <param name="left">左式。</param>
            <param name="right">右式。</param>
            <param name="operatorToken">操作符。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.BinaryExpression.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BinaryExpression.Left">
            <summary>
            获取左式。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BinaryExpression.Operator">
            <summary>
            获取操作符。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.BinaryExpression.Right">
            <summary>
            获取右式。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.IncrementOperation">
            <summary>
            表示一个加加计算。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.IncrementOperation.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.TokenType,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.IncrementOperation"/>  的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="operatorToken">操作符。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="T:CorePlus.Parser.Javascript.PostfixExpression">
            <summary>
            表示一个加加计算。
            </summary>
        </member>
        <member name="F:CorePlus.Parser.Javascript.PostfixExpression._endLocation">
            <summary>
            结束位置。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.PostfixExpression.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.TokenType,CorePlus.Parser.Javascript.Location,CorePlus.Parser.Javascript.Location)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.PostfixExpression"/>  的新实例。
            </summary>
            <param name="expression">表达式。</param>
            <param name="operatorToken">操作符。</param>
            <param name="isPrefix">是否为前缀。</param>
            <param name="startLocation">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.PostfixExpression.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.PostfixExpression.EndLocation">
            <summary>
            获取结束位置。
            </summary>
            <value></value>
        </member>
        <member name="T:CorePlus.Parser.Javascript.ConditionalExpression">
            <summary>
            表示一个条件表达式。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ConditionalExpression.#ctor(CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Expression)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.ConditionalExpression"/>  的新实例。
            </summary>
            <param name="condition">条件。</param>
            <param name="thenExpression">则语句。</param>
            <param name="elseExpression">否则语句。</param>
        </member>
        <member name="M:CorePlus.Parser.Javascript.ConditionalExpression.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            	<see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ConditionalExpression.Condition">
            <summary>
            获取条件。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ConditionalExpression.ThenExpression">
            <summary>
            获取则语句。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.ConditionalExpression.ElseExpression">
            <summary>
            获取否则语句。
            </summary>
        </member>
        <member name="T:CorePlus.Parser.Javascript.AssignmentExpression">
            <summary>
            表示一个赋值语句。
            </summary>
        </member>
        <member name="M:CorePlus.Parser.Javascript.AssignmentExpression.#ctor(CorePlus.Parser.Javascript.TokenType,CorePlus.Parser.Javascript.Expression,CorePlus.Parser.Javascript.Expression)">
            <summary>
            初始化 <see cref="T:CorePlus.Parser.Javascript.AssignmentExpression"/>  的新实例。
            </summary>
            <param name="type">类型。</param>
            <param name="target">目标。</param>
            <param name="value">值。</param>
            <param name="location">开始位置。</param>
            <param name="endLocation">结束位置。</param>
        </member>
        <member name="P:CorePlus.Parser.Javascript.AssignmentExpression.Type">
            <summary>
            获取类型。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.AssignmentExpression.Target">
            <summary>
            获取目标。
            </summary>
        </member>
        <member name="P:CorePlus.Parser.Javascript.AssignmentExpression.Value">
            <summary>
            获取值。
            </summary>
        </member>
    </members>
</doc>
